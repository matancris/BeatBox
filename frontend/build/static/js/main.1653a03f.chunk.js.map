{"version":3,"sources":["assets/img/equalizer5.gif","assets/img/logo.png","assets/img/idan.jpeg","assets/img/hilla.jpg","assets/img/matan.jpg","assets/img/hero3.jpg","assets/img/hero2.png","assets/img/hero1.jpg","assets/img/box.png","services/httpService.js","services/youtubeService.js","services/boxService.js","services/userService.js","store/reducers/userReducer.js","store/reducers/boxReducer.js","store/reducers/msgReducer.js","store/reducers/connectedUsersReducer.js","store/store.js","services/socketService.js","cmps/boxes/BoxPreview.jsx","cmps/boxes/BoxList.jsx","store/actions/boxAction.js","pages/UserDetails.jsx","cmps/box-details/SongPick.jsx","store/actions/playerActions.js","cmps/box-details/SongPreview.jsx","cmps/box-details/SongPreviewExample.jsx","cmps/box-details/SongList.jsx","services/cloudService.js","cmps/box-details/BoxInfo.jsx","store/actions/msgAction.js","store/actions/connectedUsersAction.js","cmps/box-details/BoxChat.jsx","pages/BoxDetails.jsx","cmps/GenresFilter.jsx","pages/BoxApp.jsx","cmps/box-details/BoxInfoEdit.jsx","pages/BoxAdd.jsx","cmps/Footer.jsx","pages/Home.jsx","cmps/boxes/BoxFilter.jsx","store/actions/userAction.js","cmps/user/Signup.jsx","cmps/user/Login.jsx","cmps/user/ModalUser.jsx","cmps/user/UserMenu.jsx","cmps/Header.jsx","cmps/Player.jsx","App.jsx","serviceWorker.js","index.js","assets/img/img_placeholder.png"],"names":["module","exports","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","SEARCH_URL","DETAILS_URL","API_KEYS","gCurrApiKey","gCount","youtubeService","get","titleSimplify","title","output","he","decode","replace","getDuration","getSongById","query","length","youtubeId","timeString","duration","items","contentDetails","substring","split","padStart","join","toString","gGenre","boxService","getById","getAllGenres","getUsedGenres","boxes","allGenres","forEach","box","push","genre","Set","save","update","addSong","getEmptyBox","user","name","description","imgUrl","createdBy","songs","remove","boxId","httpService","newBox","userService","addBoxToUser","_id","song","isFromDrag","id","videoId","_makeId","snippet","thumbnails","high","newSong","txt","possible","i","charAt","Math","floor","random","login","signup","logout","getUser","getMinimalUser","username","getUserBoxes","getUserById","removeBoxFromUser","toggleToFavorite","getUserFavoriteBoxes","isBoxFavorite","userCerd","_handleLoggedinUser","_getGuestMode","sessionStorage","setItem","JSON","stringify","parse","getItem","fullName","isGuest","userId","userFromDb","newBoxes","filter","Promise","all","map","favoriteBoxes","findIndex","isFavoriteIdx","splice","initialState","users","loggedinUser","currBox","currSong","activeBoxes","msgs","emojis","connectedUsers","socket","rootReducer","combineReducers","userReducer","state","action","type","boxReducer","msgReducer","msg","connectedUsersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BoxPreview","this","props","isHomePage","onDelete","className","to","src","alt","onClick","ev","Component","_BoxList","isScrolled","ref","React","createRef","executeScroll","scrollTo","scrollDiff","current","scrollWidth","offsetWidth","scrollLeft","setState","pathname","key","onAddToFavorites","minimalUser","BoxList","withRouter","socketService","setup","io","terminate","on","eventName","cb","off","emit","loadBoxes","dispatch","gotBoxUpdate","_UserDetails","userBoxes","userBoxesFavorite","stopPropagation","removeBox","history","size","color","mapDispatchToProps","UserDetails","connect","SongPick","searchStr","results","isSearching","inputRef","nullResults","handleInput","value","target","debouncedSearch","debounce","getSongs","onAddSong","result","prevProps","isSongPickOpen","focus","isFilter","onChange","placeholder","autoComplete","Fragment","idx","medium","draggableId","index","isDragDisabled","provided","innerRef","draggableProps","dragHandleProps","updateLocalPlayer","togglePlay","isPlaying","changeSong","secPlayed","_SongPreview","isRemoveOpen","timeoutId","toggleRemoveOpen","setTimeout","prevState","songId","clearTimeout","onRemoveSong","songDetails","isSongPlaying","onDoubleClick","require","SongPreview","SongPreviewExample","isFirst","num","parseInt","SongList","isDragging","onDragEnd","onDragStart","droppableId","droppableProps","style","fontSize","cloudService","uploadImg","makeFaceThumb","img","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","secure_url","BoxInfo","isEditableName","isEditableDesc","isEditableImg","onEdit","field","onSave","onSaveInfo","cursor","hidden","crossOrigin","imgRef","onLoad","getDominantColor","autoFocus","Avatar","width","height","loadMsgs","addMsg","loadConnectedUsers","_BoxChat","isTyping","typingStr","chatRef","scrollToBottom","scrollIntoView","behavior","onTyping","onHandleChange","timeout","timeoutFunction","userName","sendMsg","msgObj","text","submitAt","Date","submitBy","avatar","clear","onKeyUp","msgsArr","classUser","classPosition","date","dateToString","getHours","getMinutes","avatarsConnectedUser","getConnectedAvatars","AvatarGroup","max","getMsgsArr","el","rightButtons","backgroundColor","BoxChat","_BoxDetails","dominantColor","isMobileChatOpen","isClipboardToast","isFavorite","isGuestMode","songIdx","nextSongIdx","addMsgChat","updateBox","unshift","getSongsForDisplay","toLowerCase","includes","toggleSongPick","destination","source","onSwapSongs","srcIdx","destIdx","newSongs","songToMove","colorThief","ColorThief","getColor","every","toggleClipboardToast","toggleGuestMode","openMobileChat","closeMobileChat","toggleMobileChat","onToggleToFavorite","getIfBoxFavorite","match","params","loadBox","boxInfo","songsToShow","swipeConfig","onSwipedRight","onSwipedLeft","preventDefaultTouchmoveEvent","trackMouse","Fab","aria-label","href","rel","data-action","transform","BoxDetails","_GenresFilter","genres","getQueryParams","URLSearchParams","search","set","getCurrGenre","currGenre","isFiltered","GenresFilter","_BoxApp","onLoadBoxes","genreCount","BoxApp","BoxInfoEdit","preventDefault","setIsLoading","imgPlaceholder","disabled","selected","getGenresOptions","_BoxAdd","editBox","msgWarning","isLoading","setNewBox","emptyBox","onAddBox","printMsg","saveBox","addedBox","closeModal","goBack","BoxAdd","Footer","imgIdan","imgHilla","imgMatan","_Home","clientHeight","innerHeight","Home","_BoxFilter","isSearchOpen","isAtBoxDetails","checkIfAtDetails","startsWith","onSetFilter","toggleSearch","setFilter","isShown","BoxFilter","loadUser","_Signup","password","onSignup","userCreds","handleClose","onSubmit","required","Button","Signup","_Login","onLogin","Login","ModalUser","useState","open","setOpen","DynamicCmp","childern","variant","Dialog","onClose","DialogTitle","DialogContent","DialogActions","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","UserMenu","onLogout","classes","anchorRef","useRef","contains","aria-controls","undefined","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","_Header","isScroll","isMobileMenuOpen","onScroll","scrollY","toggleMenu","getPathForBoxAdd","currPath","endsWith","addEventListener","Header","_Player","isSyncing","isReady","muted","seeking","volume","player","waitForSync","skipToSong","skip","currSongIdx","lastSongIdx","nextSongId","seekTo","handleSeekMouseDown","handleSeekChange","handleSeekMouseUp","handleProgress","playedSeconds","updateProgress","handleEnded","handleDuration","onReady","handleVolumeChange","toggleMute","find","showTime","seconds","mins","secs","playing","controls","onEnded","onProgress","onDuration","min","onMouseDown","onMouseUp","onTouchEnd","step","visibility","getState","Player","_App","setBoxStatus","setActiveBoxes","component","path","sort","boxA","boxB","userCount","then","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1653a03f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/equalizer5.d1a782b3.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.2df3552c.png\";","module.exports = __webpack_public_path__ + \"static/media/idan.37498da7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hilla.6642151d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/matan.81bc655c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero3.c4b78485.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero2.526a0b37.png\";","module.exports = __webpack_public_path__ + \"static/media/hero1.e3df7b57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/box.6a7fc70a.png\";","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/');\r\n        }\r\n        throw err;\r\n    }\r\n}","import axios from 'axios';\r\nimport he from 'he';\r\n\r\nconst SEARCH_URL = 'https://www.googleapis.com/youtube/v3/search'\r\nconst DETAILS_URL = 'https://www.googleapis.com/youtube/v3/videos'\r\nconst API_KEYS = ['AIzaSyAbaXz2dtxN2j9YDNLWye8RfS4OOWLeNXM', 'AIzaSyAet-69tcMxIVjZynUUldjLss45_pnl60U', 'AIzaSyAlHfUbV7L6R0Y8GNZMAK6seo2tOtDWsVw'];\r\nvar gCurrApiKey = 2;\r\nvar gCount = 0\r\n\r\nexport const youtubeService = {\r\n    get,\r\n    titleSimplify,\r\n    getDuration,\r\n    getSongById,\r\n}\r\n\r\nasync function get(query) {\r\n    try {\r\n        console.log(\"get -> API_KEYS[gCurrApiKey]\", API_KEYS[gCurrApiKey])\r\n        const res = await axios.get(`${SEARCH_URL}?videoCategoryId=10&part=id,snippet&videoEmbeddable=true&type=video&maxResults=10&q=${query}&key=${API_KEYS[gCurrApiKey]}`);\r\n        \r\n        gCount = 0;\r\n        return res.data;\r\n    } catch (err) {\r\n        console.dir(err);\r\n        if (gCount === API_KEYS.length) {\r\n            gCount = 0\r\n            throw (err)\r\n        } else {\r\n            gCurrApiKey++;\r\n            gCount++;\r\n            if (gCurrApiKey >= API_KEYS.length) gCurrApiKey = 0;\r\n            return get(query);\r\n        }\r\n    }\r\n}\r\n\r\nasync function getSongById(youtubeId) {\r\n    try {\r\n        const res = await axios.get(`${DETAILS_URL}?id=${youtubeId}&part=id,contentDetails,snippet&key=${API_KEYS[gCurrApiKey]}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err);\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getDuration(youtubeId, timeString) {\r\n    let duration\r\n    if (!timeString) {\r\n        try {\r\n            let res = await axios.get(`${DETAILS_URL}?id=${youtubeId}&part=contentDetails&key=${API_KEYS[gCurrApiKey]}`);\r\n            duration = res.data.items[0].contentDetails.duration;\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw err;\r\n        }\r\n    } else duration = timeString;\r\n    try {\r\n        duration = duration.substring(2);\r\n        duration = duration.replace('M', ':');\r\n        duration = duration.split(':')\r\n        duration[1] = duration[1].replace('S', '');\r\n        duration[1] = duration[1].padStart(2, '0');\r\n        duration = duration.join(':');\r\n        return duration.toString();\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction titleSimplify(title) {\r\n    // Removes HTML char codes\r\n    let output = he.decode(title);\r\n    // Removes 'Official Video' brackets\r\n    const officialVideoRegex = /[([].?(official.?video)?(official music video)?.?[)\\]]/ig\r\n    output = output.replace(officialVideoRegex, '');\r\n\r\n    return output;\r\n}","import httpService from './httpService';\r\nimport { youtubeService } from './youtubeService';\r\nimport { userService } from '../services/userService'\r\nvar gGenre = ['Hip-hop', 'Easy', 'Electronic', 'Latin', 'Rock',\r\n    'Pop', 'Classical', 'Alternative', 'Blues', 'Disco', 'Israeli', 'Arabic']\r\n\r\nexport const boxService = {\r\n    query,\r\n    getById,\r\n    getAllGenres,\r\n    getUsedGenres,\r\n    save,\r\n    update,\r\n    addSong,\r\n    getEmptyBox,\r\n    // addConnectedUser,\r\n    remove\r\n}\r\n\r\nfunction getAllGenres() {\r\n    return gGenre;\r\n}\r\n\r\nfunction getUsedGenres(boxes) {\r\n    let allGenres = [];\r\n    boxes.forEach(box => {\r\n        allGenres.push(box.genre);\r\n    })\r\n    const genres = [...new Set(allGenres)];\r\n    return genres;\r\n}\r\n\r\nasync function getById(boxId) {\r\n    return httpService.get(`box/${boxId}`)\r\n}\r\n\r\nasync function query(query) {\r\n    query = query || '';\r\n    return await httpService.get(`box${query}`);\r\n}\r\n\r\nfunction getEmptyBox(user) {\r\n    return {\r\n        name: '',\r\n        description: '',\r\n        imgUrl: null,\r\n        genre: '',\r\n        createdBy: user,\r\n        songs: [],\r\n    }\r\n}\r\n\r\nasync function save(box) {\r\n    const newBox = await httpService.post(`box`, box);\r\n    userService.addBoxToUser(newBox._id);\r\n    return newBox;\r\n}\r\n\r\nasync function update(box) {\r\n    return await httpService.put(`box/${box._id}`, box)\r\n}\r\n\r\nasync function addSong(song, isFromDrag = false) {\r\n    const youtubeId = (isFromDrag) ? song.id : song.id.videoId;\r\n    const newSong = {\r\n        id: _makeId(),\r\n        youtubeId,\r\n        title: youtubeService.titleSimplify(song.snippet.title),\r\n        duration: await youtubeService.getDuration(song.id.videoId, song.contentDetails?.duration),\r\n        imgUrl: song.snippet.thumbnails.high.url,\r\n    }\r\n    return newSong;\r\n}\r\n\r\n\r\n// async function addConnectedUser(boxId, minimalUser) {\r\n//     const box = await getById(boxId);\r\n//     const newBox = { ...box };\r\n//     const isUserInBox = newBox.connectedUsers.find(user => user.id === minimalUser.id)\r\n//     if (!isUserInBox) {\r\n//         newBox.connectedUsers.push(minimalUser);\r\n//         await update(newBox);\r\n\r\n//         //ToDO:\r\n//         // const boxIdx = getById(minimalUser.currBoxId);\r\n//         // boxes[boxIdx].connectedUsers.splice() \r\n//     }\r\n// }\r\n\r\nfunction _makeId(length = 8) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nasync function remove(boxId) {\r\n    return httpService.delete(`box/${boxId}`)\r\n}","import httpService from './httpService'\r\nimport { boxService } from './boxService';\r\n\r\nconst STORAGE_KEY = 'loggedinUser'\r\n\r\nexport const userService = {\r\n    login,\r\n    signup,\r\n    logout,\r\n    getUser,\r\n    getMinimalUser,\r\n    addBoxToUser,\r\n    getUserBoxes,\r\n    getUserById,\r\n    removeBoxFromUser,\r\n    toggleToFavorite,\r\n    getUserFavoriteBoxes,\r\n    isBoxFavorite\r\n}\r\n\r\nasync function login(userCerd) {\r\n    const res = await httpService.post(`auth/login`, userCerd);\r\n    return _handleLoggedinUser(res);\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post(`auth/logout`);\r\n    let user =  _getGuestMode();\r\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n    // sessionStorage.clear();\r\n}\r\n\r\nasync function signup(userCerd) {\r\n    const res = await httpService.post(`auth/signup`, userCerd);\r\n    return _handleLoggedinUser(res);\r\n}\r\n\r\nfunction getUser() {\r\n    let user = _loadUser();\r\n    if (!user) {\r\n        user = _getGuestMode();\r\n        sessionStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n    }\r\n    return user;\r\n}\r\n\r\nfunction getMinimalUser() {\r\n    var user = getUser();\r\n    return {\r\n        name: user.username,\r\n        imgUrl: user.imgUrl,\r\n        id: user._id\r\n    }\r\n}\r\n\r\nfunction _getGuestMode() {\r\n    return {\r\n        username: 'Guest',\r\n        fullName: 'New Guest',\r\n        imgUrl: '',\r\n        isGuest: true,\r\n        _id: _makeId()\r\n    }\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction _handleLoggedinUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nfunction _loadUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY));\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    return httpService.get(`user/${userId}`);\r\n\r\n}\r\n\r\nasync function addBoxToUser(boxId) {\r\n    const user = getUser();\r\n    if (user.isGuest) return;\r\n    const userId = user._id;\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.boxes) userFromDb.boxes = [];\r\n    userFromDb.boxes.push(boxId);\r\n    return await httpService.put(`user/${user._id}`, userFromDb)\r\n}\r\n\r\nasync function removeBoxFromUser(boxId) {\r\n    const user = getUser();\r\n    const userId = user._id;\r\n    const userFromDb = await getUserById(userId);\r\n    const newBoxes = userFromDb.boxes.filter(box => boxId !== box);\r\n    userFromDb.boxes = newBoxes;\r\n    return await httpService.put(`user/${user._id}`, userFromDb);\r\n}\r\n\r\nasync function getUserBoxes(userId) {\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.boxes) return;\r\n    const boxes = await Promise.all(userFromDb.boxes.map(async (boxId) => {\r\n        const box = await boxService.getById(boxId);\r\n        return box;\r\n    }))\r\n    return boxes;\r\n}\r\n\r\nasync function toggleToFavorite(boxId) {\r\n    const user = getUser();\r\n    if (user.isGuest) return;\r\n    const userId = user._id;\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.favoriteBoxes) {\r\n        userFromDb.favoriteBoxes = [];\r\n        userFromDb.favoriteBoxes.push(boxId);\r\n    }\r\n    else {\r\n        const isFavoriteIdx = await userFromDb.favoriteBoxes.findIndex(box => box === boxId);\r\n        if (isFavoriteIdx === -1) userFromDb.favoriteBoxes.push(boxId);\r\n        else userFromDb.favoriteBoxes.splice(isFavoriteIdx, 1);\r\n    }\r\n    return await httpService.put(`user/${user._id}`, userFromDb);\r\n}\r\n\r\n\r\nasync function getUserFavoriteBoxes(userId) {\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.favoriteBoxes) return;\r\n    const boxes = await Promise.all(userFromDb.favoriteBoxes.map(async (boxId) => {\r\n        const box = await boxService.getById(boxId);\r\n        return box;\r\n    }))\r\n    return boxes;\r\n}\r\n\r\nasync function isBoxFavorite(user, boxId) {\r\n    if (user.isGuest) return false;\r\n    const userFromDb = await getUserById(user._id);\r\n    let isFavoriteIdx = -1;\r\n    if (!userFromDb.favoriteBoxes) return false;\r\n    isFavoriteIdx = await userFromDb.favoriteBoxes.findIndex(box => box === boxId)\r\n    if(isFavoriteIdx === -1) return false;\r\n    return true;\r\n}\r\n","\r\nimport { userService } from '../../services/userService'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedinUser: userService.getUser()\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedinUser: action.user\r\n            }\r\n        case 'ADD_USER':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.user],\r\n                loggedinUser: action.user\r\n            }\r\n        case 'UPDATE_USER':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (action.user._id === user._id) return action.user\r\n                    return user;\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    boxes: null,\r\n    currBox: null,\r\n    currSong: null,\r\n    filter: '',\r\n    activeBoxes: null,\r\n}\r\n\r\nexport function boxReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOXES':\r\n            return { ...state, boxes: action.boxes }\r\n\r\n        case 'SET_CURR_BOX':\r\n            return { ...state, currBox: action.currBox }\r\n\r\n        case 'UPDATE_BOX':\r\n            return {\r\n                ...state,\r\n                currBox: action.currBox,\r\n                boxes: state.boxes?.map(box => {\r\n                    if (action.currBox._id === box._id) return action.currBox\r\n                    return box;\r\n                })\r\n            }\r\n\r\n        case 'ADD_BOX':\r\n            return { ...state, boxes: [...state.boxes, action.box] }\r\n\r\n        case 'REMOVE_BOX':\r\n            return { ...state, boxes: state.boxes.filter(box => box._id !== action.boxId) }\r\n\r\n        case 'SET_ACTIVE_BOXES':\r\n            return { ...state, activeBoxes: action.boxes }\r\n\r\n        case 'SET_CURR_SONG':\r\n            return { ...state, currSong: action.currSong }\r\n\r\n        case 'SET_FILTER':\r\n            return { ...state, filter: action.filter }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    msgs: [],\r\n    emojis: []\r\n}\r\n\r\nexport function msgReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_MSGS':\r\n            return {\r\n                ...state,\r\n                msgs: action.msgs\r\n            }\r\n        case 'ADD_MSG':\r\n            return {\r\n                ...state, msgs: [...state.msgs, action.msg]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    connectedUsers: [],\r\n}\r\n\r\nexport function connectedUsersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONNECTED_USERS':\r\n            return { ...state, connectedUsers: action.connectedUsers }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { userReducer } from './reducers/userReducer';\r\nimport { boxReducer } from './reducers/boxReducer';\r\nimport { msgReducer } from './reducers/msgReducer';\r\nimport { connectedUsersReducer } from './reducers/connectedUsersReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer,\r\n    boxReducer,\r\n    msgReducer,\r\n    connectedUsersReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport const socketService = {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n\r\nexport class BoxPreview extends Component {\r\n    render() {\r\n        const { box, isHomePage, onDelete } = this.props;\r\n        return (\r\n            <section className={`box-preview ${isHomePage ? 'box-home-preview' : ''}`}>\r\n                <Link to={`/box/details/${box._id}`} >\r\n                    <div className=\"box-preview-img\"> <img src={box.imgUrl} alt=\"box-preview img\" /></div>\r\n                </Link>\r\n\r\n                <div className=\"box-preview-details flex column\">\r\n                    <div className=\"box-data flex space-between\">\r\n                        <h3 className=\"box-name\">{box.name}</h3>\r\n                        <Link to={`/box/details/${box._id}`} >\r\n                            <PlayCircleOutlineIcon />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"delete-btn\" title=\"Delete box\">\r\n                        {onDelete && <DeleteIcon onClick={(ev) => onDelete(ev, box._id)} />}\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport { BoxPreview } from './BoxPreview'\r\n\r\nexport class _BoxList extends Component {\r\n\r\n    state = {\r\n        isScrolled: false\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    executeScroll = (scrollTo) => {\r\n        let scrollDiff = this.ref.current.scrollWidth - this.ref.current.offsetWidth\r\n\r\n        if (this.ref.current.scrollLeft !== 0 ) {\r\n            this.setState({ isScrolled: true });\r\n        }\r\n        if (this.ref.current.scrollLeft >= scrollDiff){\r\n            this.ref.current.scrollLeft = 0\r\n            this.setState({ isScrolled: false })\r\n        } \r\n        else if (this.ref.current.scrollLeft < scrollDiff){\r\n            this.ref.current.scrollLeft += scrollTo\r\n        } \r\n        else {\r\n            this.setState({ isScrolled: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={`list-container ${this.props.genre ? '' : 'main-container'}`}>\r\n\r\n                {this.props.genre && <div className=\"genre-filter flex align-enter space-between\">\r\n                    <h3 className=\"title-genre\">{this.props.genre}</h3>\r\n                    <Link to={`/box?&genre=${this.props.genre}`}> <h3 className=\"see-all-genre\">See All →</h3></Link>\r\n                </div>}\r\n\r\n                {this.props.genre &&\r\n                    <div ref={this.ref} className={`box-list image-container ${this.props.location.pathname === '/' ? 'homepage-list' : ''}`}>\r\n                        {this.state.isScrolled && <button className=\"list-left-btn\" onClick={() => this.executeScroll(-350)}><ArrowBackIosIcon /></button>}\r\n\r\n                        {this.props.boxes.map(box => {\r\n                            if (box.genre === this.props.genre) {\r\n                                return <BoxPreview\r\n                                    isHomePage={true}\r\n                                    key={box._id}\r\n                                    box={box}\r\n                                    genre={this.props.genre}\r\n                                    onAddToFavorites={this.props.onAddToFavorites}\r\n                                    minimalUser={this.props.minimalUser}\r\n                                />\r\n                            } else return null\r\n                        })}\r\n\r\n                        <button className=\"list-right-btn\" onClick={() => this.executeScroll(350)}><ArrowForwardIosIcon /></button>\r\n                    </div>\r\n                }\r\n\r\n                {!this.props.genre && <div className=\"box-list full-grid \">\r\n                    {this.props.boxes.map(box => <BoxPreview\r\n                        isHomePage={false}\r\n                        key={box._id}\r\n                        box={box}\r\n                        minimalUser={this.props.minimalUser}\r\n                        onAddToFavorites={this.props.onAddToFavorites}\r\n                        onDelete={this.props.onDelete}\r\n                    />\r\n                    )}\r\n                </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const BoxList = withRouter(_BoxList);","import { boxService } from \"../../services/boxService\"\r\nimport { socketService } from \"../../services/socketService\";\r\n\r\nexport function loadBoxes(query) {\r\n  return async dispatch => {\r\n    const boxes = await boxService.query(query);\r\n    dispatch({ type: 'SET_BOXES', boxes })\r\n  };\r\n}\r\n\r\nexport function loadBox(boxId) {\r\n  return async dispatch => {\r\n    const currBox = await boxService.getById(boxId);\r\n    dispatch({ type: 'SET_CURR_BOX', currBox })\r\n  };\r\n}\r\n\r\nexport function saveBox(box) {\r\n  return async dispatch => {\r\n    const newBox = await boxService.save(box);\r\n    dispatch({ type: 'ADD_BOX', box: newBox })\r\n    return newBox;\r\n  };\r\n}\r\n\r\nexport function setFilter(query) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_FILTER', filter: query })\r\n  }\r\n}\r\n\r\nexport function updateBox(currBox) {\r\n  return dispatch => {\r\n    boxService.update(currBox);\r\n    socketService.emit('set currBox', currBox);\r\n    dispatch({ type: 'UPDATE_BOX', currBox })\r\n  };\r\n}\r\n\r\nexport function removeBox(boxId) {\r\n  return async dispatch => {\r\n    await boxService.remove(boxId)\r\n    dispatch({ type: 'REMOVE_BOX', boxId })\r\n  };\r\n}\r\n\r\n// UPDATES FROM SOCKET:\r\nexport function gotBoxUpdate(currBox) {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_BOX', currBox })\r\n  };\r\n}\r\n\r\nexport function setBoxStatus({ msgs, currSong }) {\r\n  return (dispatch, getState) => {\r\n    const { currBox } = getState().boxReducer;\r\n    if (!currSong.id) currSong = (currBox.songs.length) ? { id: currBox.songs[0].id, isPlaying: true, secPlayed: 0 } : null;\r\n    dispatch({ type: 'SET_CURR_SONG', currSong });\r\n    dispatch({ type: 'SET_MSGS', msgs });\r\n  }\r\n}\r\n\r\nexport function setActiveBoxes(activeBoxes) {\r\n  return async dispatch => {\r\n    if (!activeBoxes?.length) return;\r\n    var boxes = [...activeBoxes];\r\n    boxes = boxes.sort((boxA, boxB) => boxA.userCount > boxB.userCount);\r\n    boxes = boxes.splice(0, 3);\r\n    boxes = await boxes.map(async (box) => {\r\n      return await boxService.getById(box.boxId)\r\n    })\r\n    Promise.all(boxes)\r\n      .then((boxes) => {\r\n        dispatch({ type: 'SET_ACTIVE_BOXES', boxes })\r\n      })\r\n  }\r\n}","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CircleLoading } from 'react-loadingg';\r\n\r\nimport { BoxList } from '../cmps/boxes/BoxList'\r\nimport { removeBox } from '../store/actions/boxAction'\r\nimport { userService } from '../services/userService'\r\n\r\nclass _UserDetails extends Component {\r\n\r\n    state = {\r\n        userBoxes: [],\r\n        userBoxesFavorite: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const userBoxes = await userService.getUserBoxes(this.props.user._id);\r\n        const userBoxesFavorite = await userService.getUserFavoriteBoxes(this.props.user._id);\r\n        this.setState({ userBoxes, userBoxesFavorite })\r\n    }\r\n\r\n    onDelete = async (ev, boxId) => {\r\n        ev.stopPropagation();\r\n        this.props.removeBox(boxId);\r\n        await userService.removeBoxFromUser(boxId);\r\n        const userBoxes = await userService.getUserBoxes(this.props.user._id);\r\n        this.setState({ userBoxes });\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        if (this.props.user.isGuest) {\r\n            this.props.history.push(`/`);\r\n        }\r\n        if (!user) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        const { userBoxes, userBoxesFavorite } = this.state;\r\n        const minimalUser = userService.getMinimalUser();\r\n        return (\r\n            <div className=\"user-details\">\r\n                <div className=\"user-info\">\r\n                    <img className=\"img-user\" src={user.imgUrl} alt=\"user\" />\r\n                    <h2>{user.username}</h2>\r\n                    <h2>{user.fullName}</h2>\r\n                </div>\r\n                {userBoxes && <div className=\"user-boxes\">\r\n                    <h2>Boxes I created: </h2>\r\n                    <BoxList\r\n                        boxes={userBoxes}\r\n                        minimalUser={minimalUser}\r\n                        connectedUsers={this.props.connectedUsers}\r\n                        onDelete={this.onDelete}\r\n                    />\r\n                </div>}\r\n                {userBoxesFavorite && <div className=\"user-boxes-favorite\">\r\n                    <h2>My Favorite Boxes: </h2>\r\n                    <BoxList\r\n                        boxes={userBoxesFavorite}\r\n                        minimalUser={minimalUser}\r\n                        connectedUsers={this.props.connectedUsers}\r\n                    />\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n        connectedUsers: state.connectedUsersReducer.connectedUsers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removeBox\r\n}\r\n\r\n\r\nexport const UserDetails = connect(mapStateToProps, mapDispatchToProps)(_UserDetails)","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { debounce } from 'debounce';\r\nimport { CircleLoading } from 'react-loadingg';\r\n// LOCAL IMPORTS\r\nimport { youtubeService } from '../../services/youtubeService';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nexport class SongPick extends Component {\r\n    state = {\r\n        searchStr: '',\r\n        results: '',\r\n        isSearching: false\r\n    }\r\n\r\n    inputRef = React.createRef();\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.isSongPickOpen !== this.props.isSongPickOpen) this.nullResults();\r\n        if (!prevProps.isSongPickOpen && this.props.isSongPickOpen) this.inputRef.current.focus();\r\n    }\r\n\r\n    nullResults = () => {\r\n        this.setState({ searchStr: '', results: '', isSearching: false })\r\n    }\r\n\r\n    handleInput = (ev) => {\r\n        const { value } = ev.target;\r\n        if (!value) {\r\n            this.nullResults();\r\n            return;\r\n        }\r\n        this.setState({ results: '', searchStr: value, isSearching: true });\r\n        if (!this.debouncedSearch) {\r\n            this.debouncedSearch = debounce(() => this.getSongs(), 1000)\r\n        }\r\n        this.debouncedSearch();\r\n    }\r\n\r\n    getSongs = async () => {\r\n        const query = this.state.searchStr;\r\n        const res = await youtubeService.get(query);\r\n        if (!res) return;\r\n        const results = res.items;\r\n        this.setState({ results });\r\n    }\r\n\r\n    onAddSong = (result) => {\r\n        this.props.onAddSong(result);\r\n    }\r\n\r\n    render() {\r\n        const { results, isSearching, searchStr } = this.state;\r\n        const { isFilter } = this.props;\r\n        return (\r\n            <div className={`song-pick ${this.props.isSongPickOpen ? 'opened' : ''}`}>\r\n                <input ref={this.inputRef} type=\"search\" name=\"searchStr\" value={searchStr} onChange={this.handleInput} placeholder=\"Search for music\" autoComplete=\"off\" />\r\n\r\n                <div className={`song-pick-msg flex justify-center ${results.length ? 'hidden' : ''}`} >\r\n                    {(isSearching && !results) &&\r\n                        <React.Fragment>\r\n                            Getting results...\r\n                        <CircleLoading color=\"#ac0aff\" />\r\n                        </React.Fragment>\r\n                    }\r\n                    {results && !results.length && 'No results found.'}\r\n                </div>\r\n\r\n                {\r\n                    results && results.map((result, idx) => {\r\n                        const id = result.id.videoId;\r\n                        const title = youtubeService.titleSimplify(result.snippet.title);\r\n                        const imgUrl = result.snippet.thumbnails.medium.url;\r\n                        return <Draggable key={id} draggableId={id} index={idx} isDragDisabled={isFilter}>\r\n                            {provided => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    className=\"song-pick-result flex\"\r\n                                    onClick={() => this.onAddSong(result)}\r\n                                >\r\n                                    <img src={imgUrl} alt=\"thumbnail\" />\r\n                                    <h3 dir=\"auto\">{title}</h3>\r\n                                </div>\r\n                            )}\r\n                        </Draggable>\r\n                    })\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}","import { socketService } from \"../../services/socketService\";\r\n\r\n// FROM SOCKET\r\nexport function updateLocalPlayer(currSong) {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'SET_CURR_SONG', currSong })\r\n    }\r\n}\r\n//  ***************************************************************\r\nexport function togglePlay(currSong) {\r\n    return (dispatch) => {\r\n        currSong = { ...currSong, isPlaying: !currSong.isPlaying }\r\n        socketService.emit('set currSong', currSong);\r\n        dispatch({ type: 'SET_CURR_SONG', currSong })\r\n    }\r\n}\r\n\r\nexport function changeSong(id) {\r\n    return (dispatch) => {\r\n        const currSong = {\r\n            id,\r\n            isPlaying: true,\r\n            secPlayed: 0\r\n        };\r\n        socketService.emit('set currSong', currSong);\r\n        dispatch({ type: 'SET_CURR_SONG', currSong });\r\n    }\r\n}\r\n\r\nexport function updateProgress(secPlayed) {\r\n    return (dispatch, getState) => {\r\n        const currSong = {\r\n            ...getState().boxReducer.currSong, secPlayed\r\n        }\r\n        socketService.emit('update backend currSong', currSong);\r\n        dispatch({ type: 'SET_CURR_SONG', currSong });\r\n    }\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n// LOCAL IMPORTS\r\nimport { changeSong, togglePlay } from '../../store/actions/playerActions';\r\n\r\nexport class _SongPreview extends Component {\r\n    state = {\r\n        isRemoveOpen: false,\r\n        timeoutId: null,\r\n    }\r\n    toggleRemoveOpen = (ev) => {\r\n        ev.stopPropagation();\r\n        const timeoutId = setTimeout(() => this.setState({ isRemoveOpen: false }), 2000);\r\n        this.setState(prevState => ({ isRemoveOpen: !prevState.isRemoveOpen, timeoutId }));\r\n    }\r\n\r\n    remove = (ev, songId) => {\r\n        clearTimeout(this.state.timeoutId);\r\n        ev.stopPropagation();\r\n        this.props.onRemoveSong(songId);\r\n    }\r\n\r\n    render() {\r\n        const { currSong, songDetails, index, isFilter, togglePlay } = this.props;\r\n        const { isRemoveOpen } = this.state;\r\n        const isSongPlaying = (songDetails.id === currSong?.id) && currSong?.isPlaying;\r\n        return (\r\n            <Draggable draggableId={songDetails.id} index={index} isDragDisabled={isFilter}>\r\n                {provided => (\r\n                    <li\r\n\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n\r\n                        className=\"song-preview flex space-between\"\r\n                        onDoubleClick={() => this.props.changeSong(songDetails.id)}\r\n                    >\r\n\r\n                        <div className=\"song-data flex align-center\">\r\n                            <div className=\"play-icon-container flex align-center cursor-pointer\">\r\n                                {isSongPlaying ?\r\n                                    <PauseIcon\r\n                                        onClick={() => togglePlay(currSong)}\r\n                                        className={`play-icon ${isSongPlaying ? 'now-playing' : ''}`}\r\n                                    /> :\r\n                                    <PlayArrowIcon\r\n                                        onClick={() => this.props.changeSong(songDetails.id)}\r\n                                        className=\"play-icon\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"song-preview-img\"><img src={songDetails.imgUrl} alt=\"song-img\" /></div>\r\n                            <h3 className={(isSongPlaying) ? 'now-playing' : ''}>{songDetails.title}</h3>\r\n                        </div>\r\n                        <div className=\"song-preview-btns flex align-center\">\r\n                            <h3 className=\"song-duration\">{songDetails.duration || ''}</h3>\r\n                            <img className={`playing-anim ${(isSongPlaying) ? '' : 'invisible'}`} src={require('../../assets/img/equalizer5.gif')} title=\"Now playing\" alt=\"now-playing\" />\r\n                        {isRemoveOpen ?\r\n                            <div\r\n                                onClick={(ev) => this.remove(ev, songDetails.id)}\r\n                                className={`remove-song-btn ${isRemoveOpen ? '' : 'invisible'}`}\r\n                            >\r\n                                <DeleteOutlineIcon />\r\n                            </div> :\r\n\r\n                            <div><MoreVertIcon className=\"cursor-pointer\" onClick={this.toggleRemoveOpen} /></div>\r\n                        }\r\n                        </div>\r\n                    </li>\r\n        )\r\n    }\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currSong: state.boxReducer.currSong\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    togglePlay,\r\n    changeSong\r\n}\r\n\r\n\r\nexport const SongPreview = connect(mapStateToProps, mapDispatchToProps)(_SongPreview);","import React from 'react'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nexport function SongPreviewExample({ isFirst }) {\r\n    let num = parseInt(Math.random() * 40 + 40)\r\n\r\n    return (\r\n        <li key={isFirst ? 1 : 2} className=\"song-preview flex space-between\">\r\n            < div className=\"song-data flex align-center\" >\r\n                <div className=\"play-icon-container flex align-center\">\r\n                    {isFirst ? <PauseIcon className=\"play-icon now-playing\" /> :\r\n                        <PlayArrowIcon className=\"play-icon\" />}\r\n                </div>\r\n                <div className=\"song-preview-img\"><img src={`https://picsum.photos/id/${num}/120/90`} alt=\"song-img\" /></div>\r\n                <h3 className={isFirst ? 'now-playing' : ''}>{isFirst ? `Your songs go here... Click '+' to add them` : 'This could be your song'}</h3>\r\n            </div >\r\n            <div className=\"song-preview-btns flex align-center\">\r\n                <h3 className=\"song-duration\">{isFirst ? '3:22' : '4:15'}</h3>\r\n                {<img className={`playing-anim ${isFirst ? '' : 'invisible'}`} src={require('../../assets/img/equalizer5.gif')} title=\"Now playing\" alt=\"now-playing\" />}\r\n                <div><MoreVertIcon /></div>\r\n            </div>\r\n        </li >\r\n    )\r\n}","// OUTSOURCE IMPORTS\r\nimport React from 'react'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Delete } from '@material-ui/icons';\r\n// LOCAL IMPORTS\r\nimport { SongPick } from './SongPick'\r\nimport { SongPreview } from './SongPreview'\r\nimport { SongPreviewExample } from './SongPreviewExample'\r\n\r\nexport function SongList({ songs, onRemoveSong, onAddSong, isSongPickOpen, isFilter, isDragging, onDragEnd, onDragStart }) {\r\n    return (\r\n        <React.Fragment>\r\n            <DragDropContext\r\n                onDragStart={onDragStart}\r\n                onDragEnd={onDragEnd}\r\n            >\r\n                <div className=\"song-list flex space-between\">\r\n\r\n                    <Droppable droppableId={'songPick'}>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                className={`song-pick-container ${isSongPickOpen && 'opened'}`}\r\n                            >\r\n                                <SongPick isSongPickOpen={isSongPickOpen} onAddSong={onAddSong} />\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n\r\n                    {/* {!songs.length && <ul className=\"clean-list flex column flex-1\">\r\n                    {example}\r\n                </ul>} */}\r\n\r\n                    <Droppable droppableId={'songList'}>\r\n                        {(provided) => (\r\n                            <ul\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                className={`clean-list flex column flex-1`}\r\n                            >\r\n                                {(!songs.length && !isFilter) && <React.Fragment>\r\n                                    <SongPreviewExample key={1} isFirst={true} />\r\n                                    <SongPreviewExample key={2} isFirst={false} />\r\n                                </React.Fragment>}\r\n                                {(!songs.length && isFilter) && <li>No search results...</li>}\r\n                                {\r\n                                    songs.map((song, index) => {\r\n                                        return <SongPreview\r\n                                            key={song.id}\r\n                                            index={index}\r\n                                            onRemoveSong={onRemoveSong}\r\n                                            songDetails={song}\r\n                                            isFilter={isFilter}\r\n                                        />\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n\r\n                <Droppable droppableId={'trash'}>\r\n                    {provided => (\r\n                        <div\r\n                            ref={provided.innerRef} {...provided.droppableProps}\r\n                            className={`remove-song-drag ${isDragging ? 'opened' : ''}`}\r\n                        >\r\n                            <Delete className=\"bin\" style={{ fontSize: '60px', color: 'white' }} />\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )\r\n                    }\r\n                </Droppable>\r\n            </DragDropContext >\r\n        </React.Fragment>\r\n    )\r\n}","export const cloudService = {\r\n    uploadImg,\r\n    makeFaceThumb\r\n}\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"daqs7x8my\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'vfmbuhy5');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data.secure_url\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction makeFaceThumb(img) {\r\n    let imgUrl = img.split('/');\r\n    imgUrl.splice(6, 0, 'w_200,h_200,c_thumb,g_face')\r\n    imgUrl = imgUrl.join('/')\r\n    return imgUrl;\r\n}","import React, { Component } from 'react'\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading';\r\n\r\nimport { cloudService } from '../../services/cloudService';\r\n// import { boxService } from '../../services/boxService';\r\n\r\n\r\nexport class BoxInfo extends Component {\r\n    state = {\r\n        box: null,\r\n        isEditableName: false,\r\n        isEditableDesc: false,\r\n        isEditableImg: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { box } = this.props;\r\n        this.setState({ box });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const newBox = this.props.box;\r\n        if (prevProps.box === newBox) return;\r\n        this.setState({ box: newBox });\r\n    }\r\n\r\n    onEdit = (field) => {\r\n        this.setState({ [field]: true })\r\n    }\r\n\r\n    onSave = (field) => {\r\n        this.setState({ [field]: false });\r\n        const newBox = { ...this.state.box }\r\n        this.props.onSaveInfo(newBox);\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    async uploadImg(ev) {\r\n        const imgUrl = await cloudService.uploadImg(ev)\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    imgUrl\r\n                }\r\n            }\r\n        })\r\n        this.onSave('isEditableImg');\r\n    }\r\n\r\n    render() {\r\n        const { box, isEditableName, isEditableDesc } = this.state;\r\n        // const { minimalUser } = this.props;\r\n        if (!box) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        return (\r\n            <section className=\"box-info flex\">\r\n                <div className=\"box-img\">\r\n                    <label className=\"upload-label\" style={{ cursor: 'pointer' }}>\r\n                        <input onChange={(ev) => this.uploadImg(ev)} type=\"file\" hidden />\r\n                        <img\r\n                            crossOrigin={\"anonymous\"}\r\n                            ref={this.props.imgRef}\r\n                            src={box.imgUrl}\r\n                            alt=\"\"\r\n                            onLoad={this.props.getDominantColor} />\r\n                    </label>\r\n                </div>\r\n                <div className=\"info-txt flex space-between column\">\r\n                    <div className=\"info-header flex align-end flex-1\">\r\n                        {isEditableName ?\r\n                            <React.Fragment>\r\n                                <input autoFocus type=\"txt\" value={box.name} name=\"name\" onChange={this.handleInput} />\r\n                                <div className=\"btn-hide-container\">\r\n                                    <button onClick={() => this.onSave('isEditableName')} ><SaveIcon /></button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <h2 className=\"box-name\"> {box.name}</h2>\r\n                                <button onClick={() => this.onEdit('isEditableName')} className=\"hide-btn\"><CreateIcon /></button>\r\n\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"info-description flex\">\r\n                        {!isEditableDesc && <p className=\"box-description\"> {box.description}</p>}\r\n                        <div className=\"btn-hide-container\">\r\n                            {!isEditableDesc && <button onClick={() => this.onEdit('isEditableDesc')} className=\"hide-btn\"><CreateIcon /></button>}\r\n                        </div>\r\n                        {isEditableDesc && <textarea autoFocus type=\"txt\" value={box.description} name=\"description\" onChange={this.handleInput} />}\r\n                        {isEditableDesc && <button onClick={() => this.onSave('isEditableDesc')} ><SaveIcon /></button>}\r\n                    </div>\r\n                    <h4>{box.genre}</h4>\r\n\r\n                    <div className=\"info-creator flex align-center\">\r\n                        <h5>Created By: </h5>\r\n                        <Avatar alt=\"Remy Sharp\" src={box.createdBy.imgUrl} style={{ width: '35px', height: '35px' }} />\r\n                        <h5>{box.createdBy.name}</h5>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","export function loadMsgs(msgs) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_MSGS', msgs })\r\n  };\r\n}\r\n\r\nexport function addMsg(msg) {\r\n  return dispatch => {\r\n    dispatch({ type: 'ADD_MSG', msg })\r\n  };\r\n}","export function loadConnectedUsers(connectedUsers) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_CONNECTED_USERS', connectedUsers })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { SystemMessage } from 'react-chat-elements'\r\nimport { Input } from 'react-chat-elements'\r\nimport { Button } from 'react-chat-elements'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport 'react-chat-elements/dist/main.css';\r\n\r\nimport { socketService } from '../../services/socketService'\r\nimport { addMsg, loadMsgs } from '../../store/actions/msgAction'\r\n\r\nclass _BoxChat extends Component {\r\n    state = {\r\n        msgs: [],\r\n        msg: '',\r\n        isTyping: false,\r\n        typingStr: '',\r\n    }\r\n\r\n    inputRef = React.createRef();\r\n    chatRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        socketService.on('chat showTyping', this.onTyping);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('chat showTyping', this.onTyping);\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.chatRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    onTyping = typingStr => {\r\n        this.setState({ typingStr })\r\n    }\r\n\r\n    onHandleChange = async (ev) => {\r\n        var timeout;\r\n        if (!this.state.isTyping) {\r\n            clearTimeout(timeout);\r\n            this.setState({ isTyping: true });\r\n            const userName = this.props.user.username;\r\n            const typingStr = userName + ' is typing...';\r\n            socketService.emit('chat typing', typingStr);\r\n            timeout = setTimeout(this.timeoutFunction, 1500);\r\n        } else {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(this.timeoutFunction, 1500);\r\n        }\r\n        await this.setState({ msg: ev.target.value });\r\n    }\r\n\r\n    timeoutFunction = () => {\r\n        this.setState({ isTyping: false });\r\n        socketService.emit('chat typing', '');\r\n    }\r\n\r\n    sendMsg = (ev) => {\r\n        const { msg } = this.state;\r\n        if (msg) {\r\n            const msgObj = {\r\n                text: msg,\r\n                submitAt: new Date(),\r\n                id: this.props.user._id,\r\n                submitBy: this.props.user.username,\r\n                avatar: this.props.user.imgUrl,\r\n            }\r\n            socketService.emit('chat newMsg', msgObj);\r\n        }\r\n        this.setState({ msg: '' })\r\n        this.inputRef.clear();\r\n    };\r\n\r\n    getMsgsArr() {\r\n        const { msgs, user } = this.props;\r\n        const msgsArr = [];\r\n        msgs.forEach((msg, idx) => {\r\n            let classUser;\r\n            let classPosition = '';\r\n            let title;\r\n            if (msg.id === user._id) {\r\n                title = 'you';\r\n                classUser = 'user-message';\r\n                classPosition = 'flex-end'\r\n            } else {\r\n                title = msg.submitBy;\r\n                classUser = 'not-user-message';\r\n            }\r\n            const date = new Date(msg.submitAt);\r\n            const dateToString = `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n            if (msg.id === 'system') {\r\n                msgsArr.push(<SystemMessage\r\n                    key={msg.id} text={msg.text} />)\r\n            }\r\n            else {\r\n                msgsArr.push(\r\n                    <div key={idx} className={`msg flex column ${classPosition}`} >\r\n                        <div className={`msg-data flex align-center`}>\r\n                            {!classPosition && <Avatar title={user.fullName} alt=\"User\" src={msg.avatar} style={{ width: '20px', height: '20px' }} />}\r\n                            <p className=\"submit-by\">{title}</p>\r\n                            {dateToString}\r\n                        </div>\r\n                        <div className={`msg-text ${classUser}`}>\r\n                            {msg.text}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return msgsArr;\r\n    }\r\n\r\n\r\n    getConnectedAvatars() {\r\n        const { connectedUsers } = this.props;\r\n        return connectedUsers.map(user => {\r\n            return <Avatar key={user.id} alt={user.username} src={user.imgUrl} />\r\n        })\r\n    }\r\n\r\n    onKeyUp = (ev) => {\r\n        if (ev.key === 'Enter') this.sendMsg();\r\n    }\r\n\r\n    render() {\r\n        const { typingStr } = this.state;\r\n        const avatarsConnectedUser = this.getConnectedAvatars();\r\n        return (\r\n            <section className=\"wall-container flex column space-between\">\r\n                <h2 className=\"chat-title\"> Box Wall </h2>\r\n                <div className=\"connected-users flex justify-center\">\r\n                    < AvatarGroup max={4}>\r\n                        {avatarsConnectedUser}\r\n                    </AvatarGroup >\r\n                </div>\r\n                <div className=\"msgs\">\r\n                    {this.getMsgsArr()}\r\n                    <div className=\"typing-container\">\r\n                        {typingStr && <h3>{typingStr}</h3>}\r\n                    </div>\r\n                    <div ref={this.chatRef}></div>\r\n                </div>\r\n                <div className=\"input-msg\">\r\n                    <Input\r\n                        ref={el => (this.inputRef = el)}\r\n                        onChange={this.onHandleChange}\r\n                        placeholder=\"Type here...\"\r\n                        onKeyUp={this.onKeyUp}\r\n                        rightButtons={\r\n                            <Button\r\n                            className=\"btn-send\"\r\n                                text='Send'\r\n                                onClick={this.sendMsg}\r\n                                backgroundColor='#18191a'\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n        msgs: state.msgReducer.msgs,\r\n        box: state.boxReducer.currBox,\r\n        connectedUsers: state.connectedUsersReducer.connectedUsers\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadMsgs,\r\n    addMsg\r\n}\r\n\r\nexport const BoxChat = connect(mapStateToProps, mapDispatchToProps)(_BoxChat)\r\n","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport WhatsappIcon from '@material-ui/icons/WhatsApp';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport ColorThief from \"colorthief\";\r\nimport { Swipeable } from \"react-swipeable\";\r\n// LOCAL IMPORT\r\nimport { SongList } from '../cmps/box-details/SongList'\r\nimport { BoxInfo } from '../cmps/box-details/BoxInfo'\r\nimport { boxService } from '../services/boxService'\r\nimport { userService } from '../services/userService';\r\nimport { socketService } from '../services/socketService';\r\nimport { loadBox, updateBox, gotBoxUpdate } from '../store/actions/boxAction'\r\nimport { addMsg, loadMsgs } from '../store/actions/msgAction'\r\nimport { changeSong, updateLocalPlayer } from '../store/actions/playerActions'\r\nimport { loadConnectedUsers } from '../store/actions/connectedUsersAction'\r\nimport { youtubeService } from '../services/youtubeService';\r\nimport { BoxChat } from '../cmps/box-details/BoxChat'\r\n\r\nclass _BoxDetails extends Component {\r\n    state = {\r\n        isSongPickOpen: false,\r\n        isDragging: false,\r\n        msgs: [],\r\n        dominantColor: '',\r\n        isMobileChatOpen: false,\r\n        isClipboardToast: false,\r\n        isFavorite: false,\r\n        isGuestMode: false\r\n    }\r\n\r\n    imgRef = React.createRef();\r\n\r\n    async componentDidMount() {\r\n        const boxId = this.props.match.params.boxId;\r\n        const minimalUser = userService.getMinimalUser();\r\n        await this.props.loadBox(boxId);\r\n        const isFavorite = await userService.isBoxFavorite(this.props.user, boxId);\r\n        this.setState({ isFavorite });\r\n\r\n        // SOCKET JOIN TO BOX\r\n        const boxInfo = {\r\n            boxId,\r\n            user: minimalUser\r\n        }\r\n        socketService.emit('join box', boxInfo);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.match.params.boxId !== this.props.currBox._id) {\r\n            this.props.loadBox(this.props.match.params.boxId);\r\n        }\r\n    }\r\n\r\n    onRemoveSong = (songId) => {\r\n        const { currSong } = this.props;\r\n        const newBox = { ...this.props.currBox }\r\n        const songIdx = newBox.songs.findIndex(song => song.id === songId)\r\n        if (!currSong || currSong.id === songId) {\r\n            if (newBox.songs.length === 1) {\r\n                this.props.updateLocalPlayer(null);\r\n            } else if (currSong && currSong.isPlaying) {\r\n                let nextSongIdx = songIdx + 1;\r\n                if (nextSongIdx === newBox.songs.length) nextSongIdx = 0;\r\n                this.props.changeSong(newBox.songs[nextSongIdx].id);\r\n            }\r\n        }\r\n        const [song] = newBox.songs.splice(songIdx, 1);\r\n        this.addMsgChat(`Song ${song.title} removed by ${this.props.user.username}`);\r\n        this.props.updateBox(newBox);\r\n    }\r\n\r\n    onAddSong = async (song, idx, isFromDrag) => {\r\n        const newSong = await boxService.addSong(song, isFromDrag);\r\n        const newBox = { ...this.props.currBox };\r\n        if (idx) {\r\n            newBox.songs.splice(idx, 0, newSong);\r\n        }\r\n        else newBox.songs.unshift(newSong);\r\n        this.addMsgChat(`Song ${newSong.title} added by ${this.props.user.username}`);\r\n        this.props.updateBox(newBox);\r\n    }\r\n\r\n    onSaveInfo = (box) => {\r\n        this.props.updateBox(box);\r\n    }\r\n\r\n    getSongsForDisplay = () => {\r\n        const songs = this.props.currBox.songs.filter(song => {\r\n            return song.title.toLowerCase().includes(this.props.filter.toLowerCase());\r\n        })\r\n        return songs;\r\n    }\r\n\r\n    toggleSongPick = () => {\r\n        this.setState(prevState => ({ isSongPickOpen: !prevState.isSongPickOpen }))\r\n    }\r\n\r\n    onDragStart = () => {\r\n        this.setState({ isDragging: true })\r\n    }\r\n\r\n    onDragEnd = async (result) => {\r\n        const { destination, source, draggableId } = result;\r\n\r\n        this.setState({ isDragging: false })\r\n        if (!destination) return;\r\n        if (destination.droppableId === 'songPick') return;\r\n        if (source.droppableId === 'songList' && destination.droppableId === 'trash') {\r\n            this.onRemoveSong(draggableId)\r\n            return;\r\n        }\r\n        if (source.droppableId === 'songPick' && destination.droppableId === 'songList') {\r\n            let song = await youtubeService.getSongById(draggableId);\r\n            [song] = song.items;\r\n            this.onAddSong(song, destination.index, true);\r\n            return;\r\n        }\r\n\r\n        if (destination.index === source.index) return;\r\n        else this.onSwapSongs(source.index, destination.index);\r\n    }\r\n\r\n    addMsgChat = (msg) => {\r\n        const msgObj = {\r\n            text: msg,\r\n            id: 'system',\r\n            submitBy: 'system',\r\n            avatar: this.props.user.imgUrl,\r\n        }\r\n        socketService.emit('chat newMsg', msgObj);\r\n    }\r\n\r\n    onSwapSongs = (srcIdx, destIdx) => {\r\n        const newSongs = [...this.props.currBox.songs];\r\n        const [songToMove] = newSongs.splice(srcIdx, 1);\r\n        newSongs.splice(destIdx, 0, songToMove);\r\n        const newBox = { ...this.props.currBox, songs: newSongs };\r\n        this.props.updateBox(newBox);\r\n    }\r\n\r\n    getDominantColor = () => {\r\n        const colorThief = new ColorThief();\r\n        const img = this.imgRef.current;\r\n        let result = colorThief.getColor(img, 50);\r\n        if (result.every(color => color > 180)) result = result.map(color => (color > 150) ? 150 : color);\r\n        this.setState({ dominantColor: result });\r\n    }\r\n\r\n    toggleClipboardToast = () => {\r\n        this.setState({ isClipboardToast: true });\r\n        setTimeout(() => this.setState({ isClipboardToast: false }), 2000);\r\n    }\r\n\r\n    toggleGuestMode = () => {\r\n        this.setState({ isGuestMode: true });\r\n        setTimeout(() => this.setState({ isGuestMode: false }), 2000);\r\n    }\r\n\r\n    openMobileChat = () => {\r\n        this.setState({ isMobileChatOpen: true })\r\n    }\r\n\r\n    closeMobileChat = () => {\r\n        this.setState({ isMobileChatOpen: false })\r\n    }\r\n\r\n    toggleMobileChat = () => {\r\n        this.setState({ isMobileChatOpen: !this.state.isMobileChatOpen })\r\n    }\r\n\r\n    onToggleToFavorite = async () => {\r\n        if (this.props.user.isGuest) {\r\n            this.toggleGuestMode();\r\n            return;\r\n        }\r\n        const boxId = this.props.currBox._id;\r\n        await userService.toggleToFavorite(boxId);\r\n        this.setState({ isFavorite: !this.state.isFavorite });\r\n    }\r\n\r\n    getIfBoxFavorite = async () => {\r\n        const boxId = this.props.currBox._id;\r\n        const userId = this.props.user._id;\r\n        const isFavoriteIdx = await userService.isBoxFavorite(userId, boxId)\r\n        const isFavorite = (isFavoriteIdx === -1) ? true : false;\r\n        return isFavorite;\r\n    }\r\n\r\n    render() {\r\n        const { isSongPickOpen, isDragging, isFavorite } = this.state;\r\n        const { currBox, filter } = this.props;\r\n        if (!currBox) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        const songsToShow = this.getSongsForDisplay();\r\n        const minimalUser = userService.getMinimalUser();\r\n        const swipeConfig = {\r\n            onSwipedRight: () => this.openMobileChat(),\r\n            onSwipedLeft: () => this.closeMobileChat(),\r\n            preventDefaultTouchmoveEvent: true,\r\n            trackMouse: true\r\n        };\r\n\r\n        return (\r\n            <Swipeable {...swipeConfig}>\r\n                <section className=\"box-details\" style={{ backgroundColor: `rgb(${this.state.dominantColor})` }}>\r\n                    <div className=\"box-details-main flex column\">\r\n\r\n                        <BoxInfo\r\n                            getDominantColor={this.getDominantColor}\r\n                            imgRef={this.imgRef}\r\n                            box={currBox}\r\n                            onSaveInfo={this.onSaveInfo}\r\n                            minimalUser={minimalUser}\r\n                        />\r\n\r\n                        <div className=\"song-social-actions flex space-between\">\r\n                            <div className=\"btns-container flex align-center\">\r\n                                <Fab className={`add-song-btn  ${isSongPickOpen ? 'opened' : ''}`}\r\n                                    onClick={this.toggleSongPick}\r\n                                    aria-label=\"add\"\r\n                                >\r\n                                    <AddIcon />\r\n                                </Fab>\r\n\r\n                                <div title=\"Add to favorite\" className={`like-btn flex align-center ${isFavorite ? \"favorite\" : \"\"}`}>\r\n                                    <FavoriteIcon onClick={this.onToggleToFavorite} />\r\n                                    {this.state.isGuestMode && <div className=\"guest-msg\"><small>Signup to enjoy favorite feature</small></div>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"share-container flex space-between column\">\r\n                                <p>Invite a friend to join you:</p>\r\n                                <div className=\"share-btns flex space-evenely\">\r\n                                    <a className=\"facebook-share-btn\"\r\n                                        href={`https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`}\r\n                                        rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                        <FacebookIcon />\r\n                                    </a>\r\n                                    <a className=\"whatsapp-share-btn\"\r\n                                        href={`whatsapp://send?text=${currBox.createdBy.name} Shared a Box With You! : \\n\\n ${window.location.href}`}\r\n                                        data-action=\"share/whatsapp/share\">\r\n                                        <WhatsappIcon />\r\n                                    </a>\r\n                                    <CopyToClipboard className=\"copy-share-btn\" text={window.location.href}>\r\n                                        <LinkIcon onClick={this.toggleClipboardToast} style={{ transform: 'rotate(45deg) translateY(1px) translateX(4px)' }} />\r\n                                    </CopyToClipboard>\r\n                                </div>\r\n                                {this.state.isClipboardToast && <div className=\"copied-to-clipboard\"><small>Link copied to your clipboard!</small></div>}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <SongList\r\n                            songs={songsToShow}\r\n                            onRemoveSong={this.onRemoveSong}\r\n                            onAddSong={this.onAddSong}\r\n                            isSongPickOpen={isSongPickOpen}\r\n                            onDragStart={this.onDragStart}\r\n                            onDragEnd={this.onDragEnd}\r\n                            isFilter={!!filter}\r\n                            isDragging={isDragging}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={`${this.state.isMobileChatOpen ? 'chat-open' : ''} chat-box flex column align-center`} >\r\n                        <BoxChat />\r\n                    </div>\r\n\r\n                    {/* <button className={`${this.state.isMobileChatOpen ? 'chat-open' : ''} mobile-chat-btn`}\r\n                        onClick={this.toggleMobileChat}><QuestionAnswerIcon /></button> */}\r\n                </section>\r\n            </Swipeable>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currBox: state.boxReducer.currBox,\r\n        currSong: state.boxReducer.currSong,\r\n        filter: state.boxReducer.filter,\r\n        user: state.userReducer.loggedinUser,\r\n        msgs: state.msgReducer.msgs,\r\n        connectedUsers: state.connectedUsersReducer.connectedUsers\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBox,\r\n    updateBox,\r\n    addMsg,\r\n    loadMsgs,\r\n    updateLocalPlayer,\r\n    gotBoxUpdate,\r\n    loadConnectedUsers,\r\n    changeSong\r\n}\r\nexport const BoxDetails = connect(mapStateToProps, mapDispatchToProps)(_BoxDetails);","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n// LOCAL IMPORT\r\nimport { boxService } from '../services/boxService'\r\n\r\nexport class _GenresFilter extends Component {\r\n    state = {\r\n        genres: [],\r\n        isScrolled: false\r\n    }\r\n\r\n    executeScroll = (scrollTo) => {\r\n        let scrollDiff = this.ref.current.scrollWidth - this.ref.current.offsetWidth\r\n\r\n        if (this.ref.current.scrollLeft !== 0) {\r\n            this.setState({ isScrolled: true });\r\n        }\r\n        if (this.ref.current.scrollLeft >= scrollDiff) {\r\n            this.ref.current.scrollLeft = 0\r\n            this.setState({ isScrolled: false })\r\n        }\r\n        else if (this.ref.current.scrollLeft < scrollDiff) {\r\n            this.ref.current.scrollLeft += scrollTo\r\n        }\r\n        else {\r\n            this.setState({ isScrolled: false })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ref = React.createRef()\r\n        const genres = boxService.getAllGenres();\r\n        this.setState({ genres: [...genres]});\r\n    }\r\n\r\n    getQueryParams = (genre) => {\r\n        let query = new URLSearchParams(this.props.history.location.search);\r\n        query.set('genre', genre);\r\n        return query.toString();\r\n    }\r\n\r\n    getCurrGenre = () => {\r\n        const urlParams = new URLSearchParams(this.props.history.location.search)\r\n        return urlParams.get('genre');\r\n    }\r\n\r\n    render() {\r\n        const { genres} = this.state;\r\n        if (!genres.length) return <h1>Loading...</h1>\r\n        const currGenre = this.getCurrGenre();\r\n        const isFiltered = !!this.props.location.search;\r\n        return (\r\n            <div className=\"main-container\">\r\n\r\n                <div className=\"btns-filter\" ref={this.ref}>\r\n\r\n                    {this.state.isScrolled && <button className=\"list-left-btn\" onClick={() => this.executeScroll(-100)}><ArrowBackIosIcon /></button>}\r\n\r\n                    <Link to=\"/box\" className={`btn-filter flex justify-center align-center${!isFiltered ? 'active-filter' : ''}`} >All</Link>\r\n                    {genres.map((genre, idx) => {\r\n                        return <Link\r\n                            to={`/box?${this.getQueryParams(genre)}`}\r\n                            className={`btn-filter ${(genre === currGenre) ? 'active-filter' : ''}`}\r\n                            key={idx} > {genre}\r\n                        </Link>\r\n                    })\r\n                    }\r\n\r\n                    <button className=\"list-right-btn\" onClick={() => this.executeScroll(100)}><ArrowForwardIosIcon /></button>\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const GenresFilter = withRouter(_GenresFilter);","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading'\r\n// LOCAL IMPORT\r\nimport { BoxList } from '../cmps/boxes/BoxList'\r\nimport { GenresFilter } from '../cmps/GenresFilter'\r\nimport { userService } from '../services/userService'\r\nimport { loadBoxes } from '../store/actions/boxAction'\r\n\r\nclass _BoxApp extends Component {\r\n    componentDidMount() {\r\n        this.onLoadBoxes()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.search === prevProps.location.search) return;\r\n        this.onLoadBoxes();\r\n    }\r\n\r\n    onLoadBoxes = () => {\r\n        this.props.loadBoxes(this.props.location.search);\r\n    }\r\n\r\n    render() {\r\n        const { boxes, genres } = this.props;\r\n        const minimalUser = userService.getMinimalUser();\r\n        if (!boxes) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n\r\n        return (\r\n            <section className=\"box-app\" id=\"box\">\r\n                {!!genres && genres.map((genre, idx) => {\r\n                    return (\r\n                        <BoxList\r\n                            boxes={boxes}\r\n                            key={idx}\r\n                            genre={genre}\r\n                            minimalUser={minimalUser}\r\n                        />\r\n                    )\r\n                })}\r\n                {!genres && <GenresFilter genreCount={5} />}\r\n                {!genres && <BoxList boxes={boxes} minimalUser={minimalUser} />}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boxes: state.boxReducer.boxes,\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoxes,\r\n}\r\n\r\nexport const BoxApp = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoxApp))","import React, { Component } from 'react'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading';\r\n\r\nimport { cloudService } from '../../services/cloudService'\r\nimport { boxService } from '../../services/boxService'\r\nimport imgPlaceholder from '../../assets/img/img_placeholder.png';\r\n\r\nexport class BoxInfoEdit extends Component {\r\n    state = {\r\n        box: {\r\n            name: '',\r\n            genre: '',\r\n            description: '',\r\n            imgUrl: null\r\n        },\r\n    }\r\n\r\n    onSaveInfo = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.onSaveInfo(this.state.box);\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    [field]: value\r\n                }\r\n            }\r\n        }, () => this.props.updateBox(this.state.box))\r\n\r\n    }\r\n\r\n    getGenresOptions() {\r\n        const genres = boxService.getAllGenres();\r\n        return genres.map((genre, idx) => {\r\n            return <option key={idx} value={genre}>{genre}</option>\r\n        })\r\n    }\r\n\r\n    async uploadImg(ev) {\r\n        this.props.setIsLoading(true);\r\n        const imgUrl = await cloudService.uploadImg(ev);\r\n        this.props.setIsLoading(false);\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    imgUrl\r\n                }\r\n            }\r\n        }, () => this.props.updateBox(this.state.box))\r\n    }\r\n\r\n    render() {\r\n        const { box } = this.state;\r\n        if (!box) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        return (\r\n            <form>\r\n                <div className=\"box-add-form flex column\">\r\n\r\n                    <div className=\"box-add-thumbnail flex\">\r\n                        <label className=\"upload-label\" style={{ cursor: 'pointer' }} >\r\n                            <input onChange={(ev) => this.uploadImg(ev)} type=\"file\" hidden />\r\n                            <img src={box.imgUrl || imgPlaceholder} alt=\"box\" />\r\n                            <div>\r\n                                {box.imgUrl ? '' : 'Upload Image'}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"inputs flex column align-center\">\r\n\r\n                        <label>Name:</label>\r\n                        <input\r\n                            className=\"short-input\"\r\n                            autoComplete=\"off\"\r\n                            autoFocus\r\n                            type=\"txt\"\r\n                            value={box.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleInput}\r\n                            placeholder=\"Box Name\"\r\n                        />\r\n\r\n                        <label>Genre:</label>\r\n                        <select\r\n                            className=\"short-input\"\r\n                            id=\"genre\"\r\n                            name=\"genre\"\r\n                            onChange={this.handleInput}\r\n                        >\r\n                            <option disabled selected value=\"\">Select genre</option>\r\n                            {this.getGenresOptions()}\r\n                        </select>\r\n\r\n                        <label>Description:</label>\r\n                        <textarea\r\n                            type=\"txt\"\r\n                            value={box.description}\r\n                            name=\"description\"\r\n                            onChange={this.handleInput}\r\n                            placeholder=\"About the box\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form >\r\n        )\r\n    }\r\n}\r\n\r\n","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading'\r\n// LOCAL IMPORTS\r\nimport { boxService } from '../services/boxService'\r\nimport { userService } from '../services/userService'\r\nimport { saveBox, loadBoxes } from '../store/actions/boxAction'\r\nimport { BoxInfoEdit } from '../cmps/box-details/BoxInfoEdit'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport class _BoxAdd extends Component {\r\n    state = {\r\n        editBox: null,\r\n        msgWarning: '',\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNewBox();\r\n    }\r\n\r\n    setNewBox = () => {\r\n        const minimalUser = userService.getMinimalUser();\r\n        const emptyBox = boxService.getEmptyBox(minimalUser);\r\n        this.setState({ editBox: emptyBox });\r\n    }\r\n\r\n    printMsg(msg) {\r\n        this.setState({ msgWarning: msg });\r\n        setTimeout(() => {\r\n            this.setState({ msgWarning: '' });\r\n        }, 2000)\r\n    }\r\n\r\n    setIsLoading = (isLoading) => {\r\n        this.setState({ isLoading });\r\n    }\r\n\r\n    updateBox = (box) => {\r\n        this.setState(prevState => ({\r\n            editBox:\r\n            {\r\n                ...prevState.editBox,\r\n                name: box.name,\r\n                genre: box.genre,\r\n                description: box.description,\r\n                imgUrl: box.imgUrl\r\n            }\r\n        }));\r\n    }\r\n\r\n    onAddBox = async (ev) => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        if (!this.state.editBox.name) {\r\n            this.printMsg('Name of box is required');\r\n            return;\r\n        }\r\n        if (!this.state.editBox.genre) {\r\n            this.printMsg('Genre of box is required');\r\n            return;\r\n        }\r\n\r\n        const addedBox = await this.props.saveBox(this.state.editBox);\r\n        this.props.loadBoxes();\r\n        this.props.history.push(`/box/details/${addedBox._id}`);\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.history.goBack();\r\n        this.setNewBox();\r\n    }\r\n\r\n    render() {\r\n        const { editBox } = this.state;\r\n        if (!editBox) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        return (\r\n            <section onClick={this.closeModal} className=\"box-add-container flex justify-center\">\r\n                \r\n                <div className=\"box-add-modal flex column\" onClick={ev => ev.stopPropagation()}>\r\n\r\n                    <h2>Create your own Box</h2>\r\n\r\n                    <BoxInfoEdit updateBox={this.updateBox} setIsLoading={this.setIsLoading} />\r\n\r\n                        <button\r\n                            disabled={this.state.isLoading}\r\n                            className={`btn-create ${this.state.isLoading ? 'faded-btn' : ''}`}\r\n                            onClick={this.onAddBox}\r\n                        >\r\n                            Create Box\r\n                        </button>\r\n                        {this.state.msgWarning && <label className=\"msg-warnning\">{this.state.msgWarning}</label>}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBox,\r\n    loadBoxes\r\n}\r\n\r\nexport const BoxAdd = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoxAdd))","import React from 'react'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport imgIdan from '../assets/img/idan.jpeg';\r\nimport imgHilla from '../assets/img/hilla.jpg';\r\nimport imgMatan from '../assets/img/matan.jpg';\r\n\r\nexport function Footer() {\r\n    return (\r\n        <footer className=\"footer flex column align-center justify-center\">\r\n            <div className=\"container flex justify-center\">\r\n                <div className=\"developer flex align-center \">\r\n                    <img alt=\"Idan\" src={imgIdan} />\r\n                    <p>Idan Benjamin</p>\r\n                    <a href=\"https://www.linkedin.com/in/idanbenjamin\" > <LinkedInIcon /></a>\r\n                    <a href=\"https://github.com/tzookyb\" > <GitHubIcon /></a>\r\n                </div>\r\n                <div className=\"developer flex align-center\">\r\n                    <img alt=\"Hilla\" src={imgHilla} />\r\n                    <p>Hilla Meri</p>\r\n                    <a href=\"https://www.linkedin.com/in/hilla-meri-a9757a182\" > <LinkedInIcon /></a>\r\n                    <a href=\"https://github.com/HillaMeri\" > <GitHubIcon /></a>\r\n                </div>\r\n                <div className=\"developer flex align-center\">\r\n                    <img alt=\"Matan\" src={imgMatan} />\r\n                    <p>Matan Crispel</p>\r\n                    <a href=\"https://www.linkedin.com/in/matan-crispel-7316aa1a9\"> <LinkedInIcon /></a>\r\n                    <a href=\"https://github.com/matancris\" > <GitHubIcon /></a>\r\n                </div>\r\n            </div>\r\n            <small>\r\n                © Coffee Rights BeatBox 2020\r\n            </small>\r\n        </footer>\r\n    )\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CircleLoading } from 'react-loadingg';\r\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\r\n// LOCAL IMPORTS\r\nimport { boxService } from '../services/boxService'\r\nimport { BoxApp } from './BoxApp'\r\nimport { Footer } from '../cmps/Footer'\r\nimport { loadBoxes } from '../store/actions/boxAction'\r\nimport { socketService } from '../services/socketService';\r\n\r\nclass _Home extends Component {\r\n    componentDidMount() {\r\n        this.props.loadBoxes();\r\n        setTimeout(() => socketService.emit('get active boxes'), 1);\r\n        this.clientHeight = window.innerHeight;\r\n    }\r\n\r\n    render() {\r\n        const { boxes } = this.props;\r\n        if (!boxes) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        const genres = boxService.getUsedGenres(boxes);\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"top\" className=\"hero-container flex justify-center align-center\" >\r\n                    <div className=\"hero-txt flex align-center justify-end column\">\r\n                        <div className=\"hero-title flex justify-end column\">\r\n                            <h1>Share the Beat</h1>\r\n                            <p>Enjoy music. Enjoy company.</p>\r\n                        </div>\r\n                        <div className=\"hero-btns-container flex column space-around\">\r\n                            <button onClick={() => window.scrollTo(0, this.clientHeight)}>Start listening</button>\r\n                            <a href=\"#box\" className=\"scroll-down-arrow\"><ExpandMoreSharpIcon ></ExpandMoreSharpIcon></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hero-img\">\r\n                        <img src={require('../assets/img/hero3.jpg')} alt=\"\" />\r\n                        <img src={require('../assets/img/hero2.png')} alt=\"\" />\r\n                        <img src={require('../assets/img/hero1.jpg')} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <BoxActive /> */}\r\n\r\n                <div className=\"genre-list\">\r\n                    {genres.length && <BoxApp genres={genres} />}\r\n                </div>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boxes: state.boxReducer.boxes,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoxes,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n// LOCAL IMPORTS\r\nimport { setFilter } from '../../store/actions/boxAction';\r\nimport { debounce } from '@material-ui/core';\r\n\r\nexport class _BoxFilter extends Component {\r\n    state = {\r\n        searchStr: '',\r\n        isSearchOpen: false,\r\n        isAtBoxDetails: false\r\n    }\r\n    componentDidMount() {\r\n        this.checkIfAtDetails();\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        await this.checkIfAtDetails();\r\n\r\n        if (this.props.location.search !== prevProps.location.search &&\r\n            this.props.location.pathname !== '/') {\r\n            this.onSetFilter();\r\n        }\r\n    }\r\n\r\n    checkIfAtDetails = () => {\r\n        const status = this.props.location.pathname.startsWith('/box/details')\r\n        if (status !== this.state.isAtBoxDetails) this.setState({ searchStr: '', isAtBoxDetails: status })\r\n    }\r\n\r\n    onHandleChange = ({ target }) => {\r\n        this.setState({ searchStr: target.value }, this.onSetFilter);\r\n\r\n        if (this.state.isSearchOpen) {\r\n            if (!this.debouncedSearch) {\r\n                this.debouncedSearch = debounce(() => {\r\n                    if (this.state.isSearchOpen) this.toggleSearch()\r\n                }, 3000)\r\n            }\r\n            this.debouncedSearch();\r\n        }\r\n    }\r\n\r\n    onSetFilter = () => {\r\n        if (!this.state.isAtBoxDetails) {\r\n            const query = new URLSearchParams(window.location.search);\r\n            if (this.state.searchStr) query.set('name', this.state.searchStr);\r\n            this.props.history.push(`/box?${query.toString()}`);\r\n        } else this.props.setFilter(this.state.searchStr);\r\n    }\r\n    toggleSearch = () => {\r\n        this.setState(prevState => ({ isSearchOpen: !prevState.isSearchOpen }), () => {\r\n            if (this.state.isSearchOpen) this.ref.current.focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { searchStr, isAtBoxDetails } = this.state;\r\n        return (\r\n            <div className={`box-filter flex ${(this.props.isShown) ? '' : 'invisible'} ${this.state.isSearchOpen ? 'is-open' : ''}`}>\r\n                <input\r\n                    ref={this.ref}\r\n                    type=\"search\"\r\n                    className={isAtBoxDetails ? '' : \"name-filter\"}\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={searchStr}\r\n                    onChange={this.onHandleChange}\r\n                    placeholder={isAtBoxDetails ? 'Search in playlist' : 'Search for a Box'} />\r\n                <SearchIcon className=\"search-icon\" onClick={this.toggleSearch} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\nexport const BoxFilter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoxFilter))","import { userService } from \"../../services/userService\"\r\n\r\nexport function loadUser() {\r\n    return async dispatch => {\r\n        const user = await userService.getUser()\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        const users = await userService.getUsers()\r\n        dispatch({ type: 'SET_USERS', users });\r\n        return users;\r\n    };\r\n}\r\n\r\nexport function login(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.login(userCreds)\r\n        dispatch({ type: 'SET_USER', user });\r\n        return user;\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return async dispatch => {\r\n        await userService.logout();\r\n        const user = userService.getUser();\r\n        dispatch({ type: 'SET_USER', user });\r\n    };\r\n}\r\n\r\nexport function signup(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.signup(userCreds);\r\n        dispatch({ type: 'SET_USER', user });\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { signup, loadUser } from '../../store/actions/userAction'\r\nimport imgPlaceholder from '../../assets/img/img_placeholder.png';\r\nimport { cloudService } from '../../services/cloudService'\r\n\r\nclass _Signup extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            fullName: '',\r\n            password: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ user: { ...this.state.user, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    async uploadImg(ev) {\r\n        const img = await cloudService.uploadImg(ev);\r\n        const imgUrl = cloudService.makeFaceThumb(img);\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user,\r\n                    imgUrl\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onSignup = (ev) => {        \r\n        ev.preventDefault();\r\n        if (this.state.username === '') return;\r\n        const { username, fullName, password, imgUrl } = this.state.user;\r\n        const userCreds = { username, fullName, password, imgUrl };\r\n        this.props.signup(userCreds);\r\n        this.props.loadUser();\r\n        this.props.handleClose();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n        return (\r\n            <form className=\"user-add-form flex\" onSubmit={this.onSignup}>\r\n                <div className=\"inputs flex column\">\r\n                    <label>User Name:</label>\r\n                    <input\r\n                        autoFocus\r\n                        required\r\n                        name=\"username\" type=\"text\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"User Name:\"\r\n                        autoComplete=\"off\" />\r\n                    <label>Full Name:</label>\r\n                    <input\r\n                        required\r\n                        name=\"fullName\"\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Full Name\"\r\n                        autoComplete=\"off\" />\r\n                    <label>Password:</label>\r\n                    <input\r\n                        required\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\" />\r\n\r\n                    <Button className=\"btn-log\" onClick={this.onSignup}>Signup</Button>\r\n                </div>\r\n                <div className=\"user-add-thumbnail\">\r\n                    <label className=\"upload-label\" style={{ cursor: 'pointer' }} >\r\n                        <input onChange={(ev) => this.uploadImg(ev)} type=\"file\" hidden />\r\n                        <div className=\"img-container\">\r\n                            <img src={user.imgUrl || imgPlaceholder} alt=\"box\" />\r\n                        </div>\r\n                        <div>\r\n                            {user.imgUrl ? '' : 'Upload Image'}\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    // login,\r\n    loadUser,\r\n    signup\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { login, loadUser } from '../../store/actions/userAction'\r\n\r\nclass _Login extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ user: { ...this.state.user, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        ev.preventDefault();\r\n        if (this.state.username === '') return;\r\n        const { username, password } = this.state.user\r\n        const userCreds = { username, password };\r\n        const user = await this.props.login(userCreds)\r\n        if (user) {\r\n            this.props.loadUser();\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"user-add-form flex\" onSubmit={this.onLogin}>\r\n                <div className=\"inputs flex column\">\r\n                    <label>User Name:</label>\r\n                    <input\r\n                        autoFocus\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Your Name\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <label>password:</label>\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\" />\r\n                    <Button className=\"btn-log\" onClick={this.onLogin}>Login</Button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    loadUser\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Signup } from './Signup'\r\nimport { Login } from './Login'\r\n\r\nexport function ModalUser(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const cmpMap = {\r\n    Signup: Signup,\r\n    Login: Login\r\n  }\r\n\r\n  const DynamicCmp = cmpMap[props.childern];\r\n  if (!DynamicCmp) return <h1>Loading..</h1>\r\n  return (\r\n    <div className=\"modal-signup\">\r\n      <div variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.childern}\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle >\r\n        {props.childern}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DynamicCmp handleClose={handleClose} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { ModalUser } from './ModalUser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport function UserMenu({ user, onLogout }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    function logout(ev) {\r\n        ev.preventDefault();\r\n        onLogout();\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleClose = (ev) => {\r\n        if (anchorRef.current && anchorRef.current.contains(ev.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    // const prevOpen = React.useRef(open);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"user-menu\">\r\n                <Avatar\r\n                    alt=\"Remy Sharp\" ref={anchorRef}\r\n                    src={user.imgUrl}\r\n                    aria-controls={open ? 'menu-list-grow' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleToggle}\r\n                    style={{ cursor: \"pointer\" }} />\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                                        {!user.isGuest && <MenuItem onClick={handleClose}>\r\n                                            <Link to={`/user/${user._id}`} style={{ color: \"black\" }}>Profile</Link>\r\n                                        </MenuItem>}\r\n                                        <MenuItem >\r\n                                            < ModalUser childern={'Signup'}/>\r\n                                        </MenuItem>\r\n                                        <MenuItem >\r\n                                            < ModalUser childern={'Login'}/>\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={logout}>Logout</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// LOCAL IMPORT\r\nimport { BoxFilter } from './boxes/BoxFilter';\r\nimport { logout } from '../store/actions/userAction'\r\nimport { UserMenu } from './user/UserMenu'\r\n\r\nclass _Header extends Component {\r\n\r\n    state = {\r\n        isScroll: false,\r\n        isMobileMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.onScroll)\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (window.scrollY > 0) {\r\n            this.setState({ isScroll: true })\r\n        }\r\n        else this.setState({ isScroll: false })\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ isMobileMenuOpen: !this.state.isMobileMenuOpen })\r\n    }\r\n\r\n    getPathForBoxAdd = () => {\r\n        let path;\r\n        const currPath = this.props.location.pathname\r\n        if (currPath === '/') path = '/add';\r\n        else path = currPath.endsWith('/add') ? currPath : `${currPath}/add`\r\n        return path;\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={this.toggleMenu} className={`screen ${this.state.isMobileMenuOpen ? 'screen-open' : ''}`} ></div>\r\n                <header onScroll={this.onScroll} className={`${this.state.isScroll ? 'sticky' : ''} flex space-between align-center`}>\r\n                    {(this.props.location.pathname === '/') ?\r\n                        <a href=\"#top\"><img title=\"BeatBox\" className=\"logo\" src={require('../assets/img/logo.png')} alt=\"logo\" /></a> :\r\n                        <Link to=\"/\" ><img title=\"BeatBox\" className=\"logo\" src={require('../assets/img/logo.png')} alt=\"logo\" /></Link>\r\n                    }\r\n\r\n                    <BoxFilter isShown={(this.props.location.pathname !== '/' || this.state.isScroll)} />\r\n\r\n                    <div className=\"right-nav flex align-center\">\r\n                        <ul className={`${this.state.isMobileMenuOpen ? 'menu-open' : ''} main-nav flex clean-list`}>\r\n                            <li><Link to=\"/box\" onClick={this.toggleMenu}>Boxes</Link></li>\r\n                            <li><Link to={this.getPathForBoxAdd} onClick={this.toggleMenu} >Create Box</Link ></li>\r\n                        </ul>\r\n\r\n                        <div className=\"user-avatar\"><UserMenu user={user} onLogout={this.props.logout} /></div>\r\n\r\n        \r\n                        <button\r\n                            className={`menu-btn`}\r\n                            onClick={this.toggleMenu}>\r\n                            {this.state.isMobileMenuOpen ? \r\n                            <CloseIcon /> :\r\n                            <MenuIcon /> }\r\n                            {/* 'X' : '☰'} */}\r\n                        </button>\r\n                    </div>\r\n                </header >\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout,\r\n}\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Header))","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport { withRouter } from 'react-router-dom';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport { CircleLoading } from 'react-loadingg';\r\n// LOCAL IMPORT\r\nimport { changeSong, updateProgress, togglePlay } from '../store/actions/playerActions';\r\nimport { socketService } from '../services/socketService';\r\n\r\nclass _Player extends Component {\r\n    state = {\r\n        isSyncing: false,\r\n        isReady: false,\r\n        muted: false,\r\n        seeking: false,\r\n        volume: 0.75,\r\n        duration: undefined,\r\n        secPlayed: 0\r\n    }\r\n    ref = player => {\r\n        this.player = player;\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            socketService.on('got seek update', this.seekTo);\r\n        }, 1)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.currBox?._id !== prevProps.currBox?._id)\r\n            this.waitForSync(this.props.currSong)\r\n    }\r\n\r\n    waitForSync = (currSong) => {\r\n        if (this.props.currSong === currSong) setTimeout(this.waitForSync, 500);\r\n        else if (this.props.currSong?.secPlayed) {\r\n            this.setState({ isSyncing: true });\r\n            console.log('waiting for ready, status:', this.state.isReady)\r\n            if (this.state.isReady) {\r\n                socketService.emit('sync song time');\r\n                this.setState({ isSyncing: false });\r\n            }\r\n            else setTimeout(this.waitForSync, 1000)\r\n        }\r\n    }\r\n\r\n    togglePlay = () => {\r\n        this.props.togglePlay(this.props.currSong);\r\n    }\r\n\r\n    skipToSong = (skip) => {\r\n        const { currBox, currSong } = this.props;\r\n        const currSongIdx = currBox.songs.findIndex(song => song.id === currSong.id);\r\n        const lastSongIdx = currBox.songs.length - 1\r\n\r\n        var nextSongIdx = currSongIdx + skip;\r\n        if (nextSongIdx === -1) nextSongIdx = lastSongIdx;\r\n        else if (nextSongIdx > lastSongIdx) nextSongIdx = 0;\r\n\r\n        const nextSongId = currBox.songs[nextSongIdx].id\r\n        this.props.changeSong(nextSongId);\r\n    }\r\n\r\n    seekTo = (secPlayed) => {\r\n        this.player.seekTo(secPlayed);\r\n    }\r\n\r\n    handleSeekMouseDown = () => {\r\n        this.setState({ seeking: true });\r\n    }\r\n\r\n    handleSeekChange = ({ target }) => {\r\n        this.setState({ secPlayed: (parseInt(target.value)) });\r\n    }\r\n\r\n    handleSeekMouseUp = () => {\r\n        this.setState({ seeking: false });\r\n        socketService.emit('update player seek', this.state.secPlayed);\r\n    }\r\n\r\n    handleProgress = state => {\r\n        if (!this.state.seeking && !this.state.isSyncing) {\r\n            this.setState({ secPlayed: state.playedSeconds })\r\n            this.props.updateProgress(state.playedSeconds);\r\n        }\r\n    }\r\n\r\n    handleEnded = () => {\r\n        this.skipToSong(1);\r\n    }\r\n\r\n    handleDuration = (duration) => {\r\n        this.setState({ duration })\r\n    }\r\n\r\n    onReady = () => {\r\n        this.setState({ isReady: true });\r\n    }\r\n\r\n    handleVolumeChange = ({ target }) => {\r\n        this.setState({ volume: target.value })\r\n    }\r\n\r\n    toggleMute = () => {\r\n        this.setState({ muted: !this.state.muted })\r\n    }\r\n\r\n    render() {\r\n        const { secPlayed, isSyncing } = this.state;\r\n        const { currBox, currSong } = this.props;\r\n        if (!currBox || !currSong) return null;\r\n\r\n        const { isReady, volume, muted, duration } = this.state;\r\n        const { isPlaying } = currSong;\r\n\r\n        const song = currBox.songs.find(song => song.id === currSong.id);\r\n        if (!song) return null;\r\n\r\n        function showTime(seconds) {\r\n            var mins;\r\n            var secs;\r\n            if (seconds >= 60) {\r\n                mins = (parseInt(seconds / 60)).toString();\r\n                secs = (parseInt(seconds - mins * 60)).toString().padStart(2, '0');\r\n            } else {\r\n                mins = '0';\r\n                secs = (parseInt(seconds)).toString().padStart(2, '0');\r\n            }\r\n            return `${mins}:${secs}`\r\n        }\r\n\r\n        return <React.Fragment>\r\n            <ReactPlayer\r\n                ref={this.ref}\r\n                className=\"player hidden\"\r\n                url={`https://www.youtube.com/watch?v=${song?.youtubeId}`}\r\n                playing={currSong.isPlaying}\r\n                controls={false}\r\n                volume={volume}\r\n                muted={muted}\r\n                onReady={this.onReady}\r\n                onEnded={this.handleEnded}\r\n                onProgress={this.handleProgress}\r\n                onDuration={this.handleDuration}\r\n            />\r\n            <div className=\"player-container flex justify-center align-center\">\r\n                <div className={`player-capsule flex align-center justify-center ${isPlaying ? 'is-playing' : 'paused'}`}>\r\n\r\n\r\n                    <img className=\"player-thumbnail\" src={song.imgUrl} title={song.title} alt=\"song thumbnail\" />\r\n\r\n                    {!isReady ? <CircleLoading color=\"#ac0aff\" /> :\r\n                        <React.Fragment>\r\n                            <span className=\"player-title\">{song.title}</span>\r\n\r\n                            <div className=\"song-time flex align-center space-between\">\r\n                                <span className=\"player-time\">{isSyncing ? 'Syncing play...' : showTime(secPlayed)}</span>\r\n\r\n                                <input\r\n                                    className=\"duration-slider\"\r\n                                    style={{\r\n\r\n                                    }}\r\n                                    type=\"range\"\r\n                                    name=\"played\"\r\n                                    min={0}\r\n                                    max={duration}\r\n                                    onMouseDown={this.handleSeekMouseDown}\r\n                                    onMouseUp={this.handleSeekMouseUp}\r\n                                    onChange={this.handleSeekChange}\r\n                                    onTouchEnd={this.handleSeekMouseUp}\r\n                                    value={secPlayed}\r\n                                />\r\n\r\n                                {duration && <span className=\"player-time\">{showTime(duration + 1)}</span>}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    <div className=\"player-controls flex align-center\">\r\n                        <button className=\"player-ctrl-btn flex align-center\" title=\"Previous\" onClick={() => this.skipToSong(-1)}><SkipPreviousIcon /></button>\r\n                        <button className=\"player-ctrl-btn flex align-center\" title={isPlaying ? 'Pause' : 'Play'} onClick={this.togglePlay}>{isPlaying ? <PauseIcon /> : <PlayArrowIcon />}</button>\r\n                        <button className=\"player-ctrl-btn flex align-center\" title=\"Next\" onClick={() => this.skipToSong(1)}><SkipNextIcon /></button>\r\n\r\n                        <input\r\n                            className={`volume-slider ${muted ? 'muted' : ''}`}\r\n                            type=\"range\"\r\n                            value={volume}\r\n                            min={0}\r\n                            step={0.05}\r\n                            max={1}\r\n                            onChange={this.handleVolumeChange}\r\n                        />\r\n                        <button className=\"player-ctrl-btn flex justify-center align-center\" title={muted ? 'Unmute' : 'Mute'} onClick={this.toggleMute}>{muted ? <VolumeMuteIcon /> : <VolumeUpIcon />}</button>\r\n                        <img\r\n                            style={{ visibility: (this.props.location.pathname === `/box/details/${currBox._id}`) ? 'hidden' : 'visible' }}\r\n                            className=\"back-to-box\"\r\n                            src={require('../assets/img/box.png')}\r\n                            title=\"Back to box\"\r\n                            alt=\"Back to box\"\r\n                            onClick={() => this.props.history.push(`/box/details/${currBox._id}`)} />\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        </React.Fragment >\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currBox: state.boxReducer.currBox,\r\n        currSong: state.boxReducer.currSong,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changeSong,\r\n    togglePlay,\r\n    updateProgress,\r\n}\r\n\r\nexport const Player = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Player));","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// LOCAL IMPORT\r\nimport { UserDetails } from './pages/UserDetails';\r\nimport { BoxDetails } from './pages/BoxDetails';\r\nimport { BoxApp } from './pages/BoxApp';\r\nimport { BoxAdd } from './pages/BoxAdd';\r\nimport { Home } from './pages/Home';\r\nimport { Header } from './cmps/Header';\r\nimport { Player } from './cmps/Player';\r\nimport { socketService } from './services/socketService';\r\nimport { loadConnectedUsers } from './store/actions/connectedUsersAction';\r\nimport { gotBoxUpdate, loadBoxes, setActiveBoxes, setBoxStatus } from './store/actions/boxAction';\r\nimport { addMsg } from './store/actions/msgAction';\r\nimport { updateLocalPlayer } from './store/actions/playerActions';\r\n\r\nclass _App extends Component {\r\n  componentDidMount() {\r\n    this.props.loadBoxes();\r\n    // SOCKETS\r\n    socketService.setup();\r\n    socketService.on('got box status', this.props.setBoxStatus);\r\n    socketService.on('joined new box', this.props.loadConnectedUsers)\r\n    socketService.on('box changed', this.props.gotBoxUpdate);\r\n    socketService.on('chat addMsg', this.props.addMsg);\r\n    socketService.on('got player update', this.props.updateLocalPlayer);\r\n    socketService.on('got active boxes', this.props.setActiveBoxes);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <main >\r\n          <Route component={BoxAdd} path=\"**/add\" />\r\n          <Switch>\r\n            <Route component={BoxDetails} path=\"/box/details/:boxId\" />\r\n            <Route component={UserDetails} path=\"/user/:id\" />\r\n            <Route component={BoxApp} path=\"/box\" />\r\n            <Route component={Home} path=\"/\" />\r\n          </Switch>\r\n        </main>\r\n        \r\n        <Player />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  setBoxStatus,\r\n  gotBoxUpdate,\r\n  loadConnectedUsers,\r\n  addMsg,\r\n  updateLocalPlayer,\r\n  loadBoxes,\r\n  setActiveBoxes\r\n}\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { App } from './App.jsx';\r\nimport './assets/scss/global.scss';\r\n\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n// serviceWorker.register();","module.exports = __webpack_public_path__ + \"static/media/img_placeholder.ce927d4c.png\";"],"sourceRoot":""}