{"version":3,"sources":["assets/img/equalizer5.gif","assets/img/logo.png","assets/img/idan.jpeg","assets/img/hilla.jpg","assets/img/matan.jpg","assets/img/hero3.jpg","assets/img/hero2.png","assets/img/hero1.jpg","assets/img/box.png","services/httpService.js","services/youtubeService.js","services/boxService.js","services/userService.js","store/reducers/userReducer.js","store/reducers/boxReducer.js","store/reducers/msgReducer.js","store/reducers/connectedUsersReducer.js","store/store.js","services/socketService.js","cmps/boxes/BoxPreview.jsx","cmps/boxes/BoxList.jsx","store/actions/boxAction.js","pages/UserDetails.jsx","cmps/box-details/SongPick.jsx","store/actions/playerActions.js","cmps/box-details/SongPreview.jsx","cmps/box-details/SongPreviewExample.jsx","cmps/box-details/SongList.jsx","services/cloudService.js","cmps/box-details/BoxInfo.jsx","store/actions/msgAction.js","cmps/box-details/BoxChat.jsx","store/actions/connectedUsersAction.js","pages/BoxDetails.jsx","cmps/GenresFilter.jsx","pages/BoxApp.jsx","cmps/box-details/BoxInfoEdit.jsx","pages/BoxAdd.jsx","cmps/Footer.jsx","pages/Home.jsx","cmps/boxes/BoxFilter.jsx","store/actions/userAction.js","cmps/user/Signup.jsx","cmps/user/Login.jsx","cmps/user/ModalUser.jsx","cmps/user/UserMenu.jsx","cmps/Header.jsx","cmps/Player.jsx","App.jsx","serviceWorker.js","index.js","assets/img/img_placeholder.png"],"names":["module","exports","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","SEARCH_URL","DETAILS_URL","API_KEY","youtubeService","get","titleSimplify","title","output","he","decode","replace","getDuration","getSongById","query","youtubeId","timeString","duration","items","contentDetails","substring","split","padStart","join","toString","gGenre","boxService","getById","getAllGenres","getUsedGenres","boxes","allGenres","forEach","box","push","genre","Set","save","update","addSong","getEmptyBox","user","name","description","imgUrl","createdBy","songs","remove","boxId","httpService","newBox","userService","addBoxToUser","_id","song","isFromDrag","id","videoId","_makeId","snippet","thumbnails","high","newSong","length","txt","possible","i","charAt","Math","floor","random","login","signup","logout","getUser","getMinimalUser","username","getUserBoxes","getUserById","removeBoxFromUser","toggleToFavorite","getUserFavoriteBoxes","isBoxFavorite","userCerd","_handleLoggedinUser","_getGuestMode","sessionStorage","setItem","JSON","stringify","parse","getItem","fullName","isGuest","userId","userFromDb","newBoxes","filter","Promise","all","map","favoriteBoxes","findIndex","isFavoriteIdx","splice","initialState","users","loggedinUser","currBox","currSong","activeBoxes","msgs","emojis","connectedUsers","socket","rootReducer","combineReducers","userReducer","state","action","type","boxReducer","msgReducer","msg","connectedUsersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BoxPreview","this","props","isHomePage","onDelete","className","to","src","alt","onClick","ev","Component","_BoxList","isScrolled","ref","React","createRef","executeScroll","scrollTo","scrollDiff","current","scrollWidth","offsetWidth","scrollLeft","setState","pathname","key","onAddToFavorites","minimalUser","BoxList","withRouter","socketService","setup","io","terminate","on","eventName","cb","off","emit","loadBoxes","dispatch","gotBoxUpdate","_UserDetails","userBoxes","userBoxesFavorite","stopPropagation","removeBox","history","size","color","mapDispatchToProps","UserDetails","connect","SongPick","searchStr","results","isSearching","inputRef","nullResults","handleInput","value","target","debouncedSearch","debounce","getSongs","onAddSong","result","prevProps","isSongPickOpen","focus","isFilter","onChange","placeholder","autoComplete","Fragment","idx","medium","draggableId","index","isDragDisabled","provided","innerRef","draggableProps","dragHandleProps","updateLocalPlayer","togglePlay","isPlaying","changeSong","secPlayed","_SongPreview","isRemoveOpen","timeoutId","toggleRemoveOpen","setTimeout","prevState","songId","clearTimeout","onRemoveSong","songDetails","isSongPlaying","onDoubleClick","require","SongPreview","SongPreviewExample","isFirst","num","parseInt","SongList","isDragging","onDragEnd","onDragStart","droppableId","droppableProps","cloudService","uploadImg","makeFaceThumb","img","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","secure_url","BoxInfo","isEditableName","isEditableDesc","isEditableImg","onEdit","field","onSave","onSaveInfo","style","cursor","hidden","crossOrigin","imgRef","onLoad","getDominantColor","autoFocus","Avatar","width","height","loadMsgs","addMsg","_BoxChat","isTyping","typingStr","chatRef","scrollToBottom","scrollIntoView","behavior","onTyping","onHandleChange","timeout","timeoutFunction","userName","sendMsg","msgObj","text","submitAt","Date","submitBy","avatar","clear","onKeyUp","msgsArr","classUser","classPosition","date","dateToString","getHours","getMinutes","avatarsConnectedUser","getConnectedAvatars","AvatarGroup","max","getMsgsArr","el","rightButtons","backgroundColor","BoxChat","loadConnectedUsers","_BoxDetails","dominantColor","isMobileChatOpen","isClipboardToast","isFavorite","isGuestMode","songIdx","nextSongIdx","addMsgChat","updateBox","unshift","getSongsForDisplay","toLowerCase","includes","toggleSongPick","destination","source","onSwapSongs","srcIdx","destIdx","newSongs","songToMove","colorThief","ColorThief","getColor","every","toggleClipboardToast","toggleGuestMode","openMobileChat","closeMobileChat","toggleMobileChat","onToggleToFavorite","getIfBoxFavorite","match","params","loadBox","boxInfo","songsToShow","swipeConfig","onSwipedRight","onSwipedLeft","preventDefaultTouchmoveEvent","trackMouse","Fab","aria-label","href","rel","data-action","transform","BoxDetails","_GenresFilter","genres","getQueryParams","URLSearchParams","search","set","getCurrGenre","currGenre","isFiltered","GenresFilter","_BoxApp","onLoadBoxes","genreCount","BoxApp","BoxInfoEdit","preventDefault","setIsLoading","imgPlaceholder","disabled","selected","getGenresOptions","_BoxAdd","editBox","msgWarning","isLoading","setNewBox","emptyBox","onAddBox","printMsg","saveBox","addedBox","closeModal","goBack","BoxAdd","Footer","imgIdan","imgHilla","imgMatan","_Home","clientHeight","innerHeight","Home","_BoxFilter","isSearchOpen","isAtBoxDetails","checkIfAtDetails","startsWith","onSetFilter","toggleSearch","setFilter","isShown","BoxFilter","loadUser","_Signup","password","onSignup","userCreds","handleClose","onSubmit","required","Button","Signup","_Login","onLogin","Login","ModalUser","useState","open","setOpen","DynamicCmp","childern","variant","Dialog","onClose","DialogTitle","DialogContent","DialogActions","useStyles","makeStyles","theme","root","display","paper","marginRight","spacing","UserMenu","onLogout","classes","anchorRef","useRef","contains","aria-controls","undefined","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","_Header","isScroll","isMobileMenuOpen","onScroll","scrollY","toggleMenu","getPathForBoxAdd","currPath","endsWith","addEventListener","Header","_Player","isSyncing","isReady","muted","seeking","volume","player","waitForSync","skipToSong","skip","currSongIdx","lastSongIdx","nextSongId","seekTo","handleSeekMouseDown","handleSeekChange","handleSeekMouseUp","handleProgress","playedSeconds","updateProgress","handleEnded","handleDuration","onReady","handleVolumeChange","toggleMute","find","showTime","seconds","mins","secs","playing","controls","onEnded","onProgress","onDuration","min","onMouseDown","onMouseUp","onTouchEnd","step","visibility","getState","Player","_App","setBoxStatus","setActiveBoxes","component","path","sort","boxA","boxB","userCount","then","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.572c04b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/equalizer5.d1a782b3.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.2df3552c.png\";","module.exports = __webpack_public_path__ + \"static/media/idan.37498da7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hilla.6642151d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/matan.81bc655c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero3.c4b78485.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero2.526a0b37.png\";","module.exports = __webpack_public_path__ + \"static/media/hero1.e3df7b57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/box.6a7fc70a.png\";","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/');\r\n        }\r\n        throw err;\r\n    }\r\n}","import axios from 'axios';\r\nimport he from 'he';\r\n\r\nconst SEARCH_URL = 'https://www.googleapis.com/youtube/v3/search'\r\nconst DETAILS_URL = 'https://www.googleapis.com/youtube/v3/videos'\r\nconst API_KEY = 'AIzaSyBqervqI1bhI7zmxR4tQEadbG8h_6pXIek';\r\n\r\n\r\nexport const youtubeService = {\r\n    get,\r\n    titleSimplify,\r\n    getDuration,\r\n    getSongById,\r\n}\r\n\r\nasync function get(query) {\r\n    try {\r\n        console.log(\"get -> API_KEYS[gCurrApiKey]\", API_KEY)\r\n        const res = await axios.get(`${SEARCH_URL}?videoCategoryId=10&part=id,snippet&videoEmbeddable=true&type=video&maxResults=10&q=${query}&key=${API_KEY}`);\r\n        \r\n        return res.data;\r\n    } catch (err) {\r\n        console.dir(err);\r\n    }\r\n}\r\n\r\nasync function getSongById(youtubeId) {\r\n    try {\r\n        const res = await axios.get(`${DETAILS_URL}?id=${youtubeId}&part=id,contentDetails,snippet&key=${API_KEY}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err);\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getDuration(youtubeId, timeString) {\r\n    let duration\r\n    if (!timeString) {\r\n        try {\r\n            let res = await axios.get(`${DETAILS_URL}?id=${youtubeId}&part=contentDetails&key=${API_KEY}`);\r\n            duration = res.data.items[0].contentDetails.duration;\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw err;\r\n        }\r\n    } else duration = timeString;\r\n    try {\r\n        duration = duration.substring(2);\r\n        duration = duration.replace('M', ':');\r\n        duration = duration.split(':')\r\n        duration[1] = duration[1].replace('S', '');\r\n        duration[1] = duration[1].padStart(2, '0');\r\n        duration = duration.join(':');\r\n        return duration.toString();\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction titleSimplify(title) {\r\n    // Removes HTML char codes\r\n    let output = he.decode(title);\r\n    // Removes 'Official Video' brackets\r\n    const officialVideoRegex = /[([].?(official.?video)?(official music video)?.?[)\\]]/ig\r\n    output = output.replace(officialVideoRegex, '');\r\n\r\n    return output;\r\n}","import httpService from './httpService';\r\nimport { youtubeService } from './youtubeService';\r\nimport { userService } from '../services/userService'\r\nvar gGenre = ['Hip-hop', 'Easy', 'Electronic', 'Latin', 'Rock',\r\n    'Pop', 'Classical', 'Alternative', 'Blues', 'Disco', 'Israeli', 'Arabic']\r\n\r\nexport const boxService = {\r\n    query,\r\n    getById,\r\n    getAllGenres,\r\n    getUsedGenres,\r\n    save,\r\n    update,\r\n    addSong,\r\n    getEmptyBox,\r\n    // addConnectedUser,\r\n    remove\r\n}\r\n\r\nfunction getAllGenres() {\r\n    return gGenre;\r\n}\r\n\r\nfunction getUsedGenres(boxes) {\r\n    let allGenres = [];\r\n    boxes.forEach(box => {\r\n        allGenres.push(box.genre);\r\n    })\r\n    const genres = [...new Set(allGenres)];\r\n    return genres;\r\n}\r\n\r\nasync function getById(boxId) {\r\n    return httpService.get(`box/${boxId}`)\r\n}\r\n\r\nasync function query(query) {\r\n    query = query || '';\r\n    return await httpService.get(`box${query}`);\r\n}\r\n\r\nfunction getEmptyBox(user) {\r\n    return {\r\n        name: '',\r\n        description: '',\r\n        imgUrl: null,\r\n        genre: '',\r\n        createdBy: user,\r\n        songs: [],\r\n    }\r\n}\r\n\r\nasync function save(box) {\r\n    const newBox = await httpService.post(`box`, box);\r\n    userService.addBoxToUser(newBox._id);\r\n    return newBox;\r\n}\r\n\r\nasync function update(box) {\r\n    return await httpService.put(`box/${box._id}`, box)\r\n}\r\n\r\nasync function addSong(song, isFromDrag = false) {\r\n    const youtubeId = (isFromDrag) ? song.id : song.id.videoId;\r\n    const newSong = {\r\n        id: _makeId(),\r\n        youtubeId,\r\n        title: youtubeService.titleSimplify(song.snippet.title),\r\n        duration: await youtubeService.getDuration(song.id.videoId, song.contentDetails?.duration),\r\n        imgUrl: song.snippet.thumbnails.high.url,\r\n    }\r\n    return newSong;\r\n}\r\n\r\n\r\n// async function addConnectedUser(boxId, minimalUser) {\r\n//     const box = await getById(boxId);\r\n//     const newBox = { ...box };\r\n//     const isUserInBox = newBox.connectedUsers.find(user => user.id === minimalUser.id)\r\n//     if (!isUserInBox) {\r\n//         newBox.connectedUsers.push(minimalUser);\r\n//         await update(newBox);\r\n\r\n//         //ToDO:\r\n//         // const boxIdx = getById(minimalUser.currBoxId);\r\n//         // boxes[boxIdx].connectedUsers.splice() \r\n//     }\r\n// }\r\n\r\nfunction _makeId(length = 8) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nasync function remove(boxId) {\r\n    return httpService.delete(`box/${boxId}`)\r\n}","import httpService from './httpService'\r\nimport { boxService } from './boxService';\r\n\r\nconst STORAGE_KEY = 'loggedinUser'\r\n\r\nexport const userService = {\r\n    login,\r\n    signup,\r\n    logout,\r\n    getUser,\r\n    getMinimalUser,\r\n    addBoxToUser,\r\n    getUserBoxes,\r\n    getUserById,\r\n    removeBoxFromUser,\r\n    toggleToFavorite,\r\n    getUserFavoriteBoxes,\r\n    isBoxFavorite\r\n}\r\n\r\nasync function login(userCerd) {\r\n    const res = await httpService.post(`auth/login`, userCerd);\r\n    return _handleLoggedinUser(res);\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post(`auth/logout`);\r\n    let user =  _getGuestMode();\r\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n    // sessionStorage.clear();\r\n}\r\n\r\nasync function signup(userCerd) {\r\n    const res = await httpService.post(`auth/signup`, userCerd);\r\n    return _handleLoggedinUser(res);\r\n}\r\n\r\nfunction getUser() {\r\n    let user = _loadUser();\r\n    if (!user) {\r\n        user = _getGuestMode();\r\n        sessionStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n    }\r\n    return user;\r\n}\r\n\r\nfunction getMinimalUser() {\r\n    var user = getUser();\r\n    return {\r\n        name: user.username,\r\n        imgUrl: user.imgUrl,\r\n        id: user._id\r\n    }\r\n}\r\n\r\nfunction _getGuestMode() {\r\n    return {\r\n        username: 'Guest',\r\n        fullName: 'New Guest',\r\n        imgUrl: '',\r\n        isGuest: true,\r\n        _id: _makeId()\r\n    }\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction _handleLoggedinUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nfunction _loadUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY));\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    return httpService.get(`user/${userId}`);\r\n\r\n}\r\n\r\nasync function addBoxToUser(boxId) {\r\n    const user = getUser();\r\n    if (user.isGuest) return;\r\n    const userId = user._id;\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.boxes) userFromDb.boxes = [];\r\n    userFromDb.boxes.push(boxId);\r\n    return await httpService.put(`user/${user._id}`, userFromDb)\r\n}\r\n\r\nasync function removeBoxFromUser(boxId) {\r\n    const user = getUser();\r\n    const userId = user._id;\r\n    const userFromDb = await getUserById(userId);\r\n    const newBoxes = userFromDb.boxes.filter(box => boxId !== box);\r\n    userFromDb.boxes = newBoxes;\r\n    return await httpService.put(`user/${user._id}`, userFromDb);\r\n}\r\n\r\nasync function getUserBoxes(userId) {\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.boxes) return;\r\n    const boxes = await Promise.all(userFromDb.boxes.map(async (boxId) => {\r\n        const box = await boxService.getById(boxId);\r\n        return box;\r\n    }))\r\n    return boxes;\r\n}\r\n\r\nasync function toggleToFavorite(boxId) {\r\n    const user = getUser();\r\n    if (user.isGuest) return;\r\n    const userId = user._id;\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.favoriteBoxes) {\r\n        userFromDb.favoriteBoxes = [];\r\n        userFromDb.favoriteBoxes.push(boxId);\r\n    }\r\n    else {\r\n        const isFavoriteIdx = await userFromDb.favoriteBoxes.findIndex(box => box === boxId);\r\n        if (isFavoriteIdx === -1) userFromDb.favoriteBoxes.push(boxId);\r\n        else userFromDb.favoriteBoxes.splice(isFavoriteIdx, 1);\r\n    }\r\n    return await httpService.put(`user/${user._id}`, userFromDb);\r\n}\r\n\r\n\r\nasync function getUserFavoriteBoxes(userId) {\r\n    const userFromDb = await getUserById(userId);\r\n    if (!userFromDb.favoriteBoxes) return;\r\n    const boxes = await Promise.all(userFromDb.favoriteBoxes.map(async (boxId) => {\r\n        const box = await boxService.getById(boxId);\r\n        return box;\r\n    }))\r\n    return boxes;\r\n}\r\n\r\nasync function isBoxFavorite(user, boxId) {\r\n    if (user.isGuest) return false;\r\n    const userFromDb = await getUserById(user._id);\r\n    let isFavoriteIdx = -1;\r\n    if (!userFromDb.favoriteBoxes) return false;\r\n    isFavoriteIdx = await userFromDb.favoriteBoxes.findIndex(box => box === boxId)\r\n    if(isFavoriteIdx === -1) return false;\r\n    return true;\r\n}\r\n","\r\nimport { userService } from '../../services/userService'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedinUser: userService.getUser()\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedinUser: action.user\r\n            }\r\n        case 'ADD_USER':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.user],\r\n                loggedinUser: action.user\r\n            }\r\n        case 'UPDATE_USER':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (action.user._id === user._id) return action.user\r\n                    return user;\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    boxes: null,\r\n    currBox: null,\r\n    currSong: null,\r\n    filter: '',\r\n    activeBoxes: null,\r\n}\r\n\r\nexport function boxReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOXES':\r\n            return { ...state, boxes: action.boxes }\r\n\r\n        case 'SET_CURR_BOX':\r\n            return { ...state, currBox: action.currBox }\r\n\r\n        case 'UPDATE_BOX':\r\n            return {\r\n                ...state,\r\n                currBox: action.currBox,\r\n                boxes: state.boxes?.map(box => {\r\n                    if (action.currBox._id === box._id) return action.currBox\r\n                    return box;\r\n                })\r\n            }\r\n\r\n        case 'ADD_BOX':\r\n            return { ...state, boxes: [...state.boxes, action.box] }\r\n\r\n        case 'REMOVE_BOX':\r\n            return { ...state, boxes: state.boxes.filter(box => box._id !== action.boxId) }\r\n\r\n        case 'SET_ACTIVE_BOXES':\r\n            return { ...state, activeBoxes: action.boxes }\r\n\r\n        case 'SET_CURR_SONG':\r\n            return { ...state, currSong: action.currSong }\r\n\r\n        case 'SET_FILTER':\r\n            return { ...state, filter: action.filter }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    msgs: [],\r\n    emojis: []\r\n}\r\n\r\nexport function msgReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_MSGS':\r\n            return {\r\n                ...state,\r\n                msgs: action.msgs\r\n            }\r\n        case 'ADD_MSG':\r\n            return {\r\n                ...state, msgs: [...state.msgs, action.msg]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    connectedUsers: [],\r\n}\r\n\r\nexport function connectedUsersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONNECTED_USERS':\r\n            return { ...state, connectedUsers: action.connectedUsers }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { userReducer } from './reducers/userReducer';\r\nimport { boxReducer } from './reducers/boxReducer';\r\nimport { msgReducer } from './reducers/msgReducer';\r\nimport { connectedUsersReducer } from './reducers/connectedUsersReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    userReducer,\r\n    boxReducer,\r\n    msgReducer,\r\n    connectedUsersReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport const socketService = {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n\r\nexport class BoxPreview extends Component {\r\n    render() {\r\n        const { box, isHomePage, onDelete } = this.props;\r\n        return (\r\n            <section className={`box-preview ${isHomePage ? 'box-home-preview' : ''}`}>\r\n                <Link to={`/box/details/${box._id}`} >\r\n                    <div className=\"box-preview-img\"> <img src={box.imgUrl} alt=\"box-preview img\" /></div>\r\n                </Link>\r\n\r\n                <div className=\"box-preview-details flex column\">\r\n                    <div className=\"box-data flex space-between\">\r\n                        <h3 className=\"box-name\">{box.name}</h3>\r\n                        <Link to={`/box/details/${box._id}`} >\r\n                            <PlayCircleOutlineIcon />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"delete-btn\" title=\"Delete box\">\r\n                        {onDelete && <DeleteIcon onClick={(ev) => onDelete(ev, box._id)} />}\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n// LOCAL IMPORTS\r\nimport { BoxPreview } from './BoxPreview'\r\n\r\nexport class _BoxList extends Component {\r\n\r\n    state = {\r\n        isScrolled: false\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    executeScroll = (scrollTo) => {\r\n        let scrollDiff = this.ref.current.scrollWidth - this.ref.current.offsetWidth\r\n\r\n        if (this.ref.current.scrollLeft !== 0 ) {\r\n            this.setState({ isScrolled: true });\r\n        }\r\n        if (this.ref.current.scrollLeft >= scrollDiff){\r\n            this.ref.current.scrollLeft = 0\r\n            this.setState({ isScrolled: false })\r\n        } \r\n        else if (this.ref.current.scrollLeft < scrollDiff){\r\n            this.ref.current.scrollLeft += scrollTo\r\n        } \r\n        else {\r\n            this.setState({ isScrolled: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={`list-container ${this.props.genre ? '' : 'main-container'}`}>\r\n\r\n                {this.props.genre && <div className=\"genre-filter flex align-enter space-between\">\r\n                    <h3 className=\"title-genre\">{this.props.genre}</h3>\r\n                    <Link to={`/box?&genre=${this.props.genre}`}> <h3 className=\"see-all-genre\">See All →</h3></Link>\r\n                </div>}\r\n\r\n                {this.props.genre &&\r\n                    <div ref={this.ref} className={`box-list image-container ${this.props.location.pathname === '/' ? 'homepage-list' : ''}`}>\r\n                        {this.state.isScrolled && <button className=\"list-left-btn\" onClick={() => this.executeScroll(-350)}><ArrowBackIosIcon /></button>}\r\n\r\n                        {this.props.boxes.map(box => {\r\n                            if (box.genre === this.props.genre) {\r\n                                return <BoxPreview\r\n                                    isHomePage={true}\r\n                                    key={box._id}\r\n                                    box={box}\r\n                                    genre={this.props.genre}\r\n                                    onAddToFavorites={this.props.onAddToFavorites}\r\n                                    minimalUser={this.props.minimalUser}\r\n                                />\r\n                            } else return null\r\n                        })}\r\n\r\n                        <button className=\"list-right-btn\" onClick={() => this.executeScroll(350)}><ArrowForwardIosIcon /></button>\r\n                    </div>\r\n                }\r\n\r\n                {!this.props.genre && <div className=\"box-list full-grid \">\r\n                    {this.props.boxes.map(box => <BoxPreview\r\n                        isHomePage={false}\r\n                        key={box._id}\r\n                        box={box}\r\n                        minimalUser={this.props.minimalUser}\r\n                        onAddToFavorites={this.props.onAddToFavorites}\r\n                        onDelete={this.props.onDelete}\r\n                    />\r\n                    )}\r\n                </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const BoxList = withRouter(_BoxList);","import { boxService } from \"../../services/boxService\"\r\nimport { socketService } from \"../../services/socketService\";\r\n\r\nexport function loadBoxes(query) {\r\n  return async dispatch => {\r\n    const boxes = await boxService.query(query);\r\n    dispatch({ type: 'SET_BOXES', boxes })\r\n  };\r\n}\r\n\r\nexport function loadBox(boxId) {\r\n  return async dispatch => {\r\n    const currBox = await boxService.getById(boxId);\r\n    dispatch({ type: 'SET_CURR_BOX', currBox })\r\n  };\r\n}\r\n\r\nexport function saveBox(box) {\r\n  return async dispatch => {\r\n    const newBox = await boxService.save(box);\r\n    dispatch({ type: 'ADD_BOX', box: newBox })\r\n    return newBox;\r\n  };\r\n}\r\n\r\nexport function setFilter(query) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_FILTER', filter: query })\r\n  }\r\n}\r\n\r\nexport function updateBox(currBox) {\r\n  return dispatch => {\r\n    boxService.update(currBox);\r\n    socketService.emit('set currBox', currBox);\r\n    dispatch({ type: 'UPDATE_BOX', currBox })\r\n  };\r\n}\r\n\r\nexport function removeBox(boxId) {\r\n  return async dispatch => {\r\n    await boxService.remove(boxId)\r\n    dispatch({ type: 'REMOVE_BOX', boxId })\r\n  };\r\n}\r\n\r\n// UPDATES FROM SOCKET:\r\nexport function gotBoxUpdate(currBox) {\r\n  return dispatch => {\r\n    dispatch({ type: 'UPDATE_BOX', currBox })\r\n  };\r\n}\r\n\r\nexport function setBoxStatus({ msgs, currSong }) {\r\n  return (dispatch, getState) => {\r\n    const { currBox } = getState().boxReducer;\r\n    if (!currSong.id) currSong = (currBox.songs.length) ? { id: currBox.songs[0].id, isPlaying: true, secPlayed: 0 } : null;\r\n    dispatch({ type: 'SET_CURR_SONG', currSong });\r\n    dispatch({ type: 'SET_MSGS', msgs });\r\n  }\r\n}\r\n\r\nexport function setActiveBoxes(activeBoxes) {\r\n  return async dispatch => {\r\n    if (!activeBoxes?.length) return;\r\n    var boxes = [...activeBoxes];\r\n    boxes = boxes.sort((boxA, boxB) => boxA.userCount > boxB.userCount);\r\n    boxes = boxes.splice(0, 3);\r\n    boxes = await boxes.map(async (box) => {\r\n      return await boxService.getById(box.boxId)\r\n    })\r\n    Promise.all(boxes)\r\n      .then((boxes) => {\r\n        dispatch({ type: 'SET_ACTIVE_BOXES', boxes })\r\n      })\r\n  }\r\n}","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CircleLoading } from 'react-loadingg';\r\n\r\n// LOCAL IMPORTS\r\nimport { BoxList } from '../cmps/boxes/BoxList'\r\nimport { removeBox } from '../store/actions/boxAction'\r\nimport { userService } from '../services/userService'\r\n\r\nclass _UserDetails extends Component {\r\n\r\n    state = {\r\n        userBoxes: [],\r\n        userBoxesFavorite: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const userBoxes = await userService.getUserBoxes(this.props.user._id);\r\n        const userBoxesFavorite = await userService.getUserFavoriteBoxes(this.props.user._id);\r\n        this.setState({ userBoxes, userBoxesFavorite })\r\n    }\r\n\r\n    onDelete = async (ev, boxId) => {\r\n        ev.stopPropagation();\r\n        this.props.removeBox(boxId);\r\n        await userService.removeBoxFromUser(boxId);\r\n        const userBoxes = await userService.getUserBoxes(this.props.user._id);\r\n        this.setState({ userBoxes });\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        if (this.props.user.isGuest) {\r\n            this.props.history.push(`/`);\r\n        }\r\n        if (!user) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        const { userBoxes, userBoxesFavorite } = this.state;\r\n        const minimalUser = userService.getMinimalUser();\r\n        return (\r\n            <div className=\"user-details\">\r\n                <div className=\"user-info\">\r\n                    <img className=\"img-user\" src={user.imgUrl} alt=\"user\" />\r\n                    <h2>{user.username}</h2>\r\n                    <h2>{user.fullName}</h2>\r\n                </div>\r\n                {userBoxes && <div className=\"user-boxes\">\r\n                    <h2>Boxes I created: </h2>\r\n                    <BoxList\r\n                        boxes={userBoxes}\r\n                        minimalUser={minimalUser}\r\n                        connectedUsers={this.props.connectedUsers}\r\n                        onDelete={this.onDelete}\r\n                    />\r\n                </div>}\r\n                {userBoxesFavorite && <div className=\"user-boxes-favorite\">\r\n                    <h2>My Favorite Boxes: </h2>\r\n                    <BoxList\r\n                        boxes={userBoxesFavorite}\r\n                        minimalUser={minimalUser}\r\n                        connectedUsers={this.props.connectedUsers}\r\n                    />\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n        connectedUsers: state.connectedUsersReducer.connectedUsers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removeBox\r\n}\r\n\r\n\r\nexport const UserDetails = connect(mapStateToProps, mapDispatchToProps)(_UserDetails)","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { debounce } from 'debounce';\r\nimport { CircleLoading } from 'react-loadingg';\r\n\r\n// LOCAL IMPORTS\r\nimport { youtubeService } from '../../services/youtubeService';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nexport class SongPick extends Component {\r\n    state = {\r\n        searchStr: '',\r\n        results: '',\r\n        isSearching: false\r\n    }\r\n\r\n    inputRef = React.createRef();\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.isSongPickOpen !== this.props.isSongPickOpen) this.nullResults();\r\n        if (!prevProps.isSongPickOpen && this.props.isSongPickOpen) this.inputRef.current.focus();\r\n    }\r\n\r\n    nullResults = () => {\r\n        this.setState({ searchStr: '', results: '', isSearching: false })\r\n    }\r\n\r\n    handleInput = (ev) => {\r\n        const { value } = ev.target;\r\n        if (!value) {\r\n            this.nullResults();\r\n            return;\r\n        }\r\n        this.setState({ results: '', searchStr: value, isSearching: true });\r\n        if (!this.debouncedSearch) {\r\n            this.debouncedSearch = debounce(() => this.getSongs(), 1000)\r\n        }\r\n        this.debouncedSearch();\r\n    }\r\n\r\n    getSongs = async () => {\r\n        const query = this.state.searchStr;\r\n        const res = await youtubeService.get(query);\r\n        if (!res) return;\r\n        const results = res.items;\r\n        this.setState({ results });\r\n    }\r\n\r\n    onAddSong = (result) => {\r\n        this.props.onAddSong(result);\r\n    }\r\n\r\n    render() {\r\n        const { results, isSearching, searchStr } = this.state;\r\n        const { isFilter } = this.props;\r\n        return (\r\n            <div className={`song-pick ${this.props.isSongPickOpen ? 'opened' : ''}`}>\r\n                <input ref={this.inputRef} type=\"search\" name=\"searchStr\" value={searchStr} onChange={this.handleInput} placeholder=\"Search for music\" autoComplete=\"off\" />\r\n\r\n                <div className={`song-pick-msg flex justify-center ${results.length ? 'hidden' : ''}`} >\r\n                    {(isSearching && !results) &&\r\n                        <React.Fragment>\r\n                            Getting results...\r\n                        <CircleLoading color=\"#ac0aff\" />\r\n                        </React.Fragment>\r\n                    }\r\n                    {results && !results.length && 'No results found.'}\r\n                </div>\r\n\r\n                {\r\n                    results && results.map((result, idx) => {\r\n                        const id = result.id.videoId;\r\n                        const title = youtubeService.titleSimplify(result.snippet.title);\r\n                        const imgUrl = result.snippet.thumbnails.medium.url;\r\n                        return <Draggable key={id} draggableId={id} index={idx} isDragDisabled={isFilter}>\r\n                            {provided => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    className=\"song-pick-result flex\"\r\n                                    onClick={() => this.onAddSong(result)}\r\n                                >\r\n                                    <img src={imgUrl} alt=\"thumbnail\" />\r\n                                    <h3 dir=\"auto\">{title}</h3>\r\n                                </div>\r\n                            )}\r\n                        </Draggable>\r\n                    })\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}","import { socketService } from \"../../services/socketService\";\r\n\r\n// FROM SOCKET\r\nexport function updateLocalPlayer(currSong) {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'SET_CURR_SONG', currSong })\r\n    }\r\n}\r\n//  ***************************************************************\r\nexport function togglePlay(currSong) {\r\n    return (dispatch) => {\r\n        currSong = { ...currSong, isPlaying: !currSong.isPlaying }\r\n        socketService.emit('set currSong', currSong);\r\n        dispatch({ type: 'SET_CURR_SONG', currSong })\r\n    }\r\n}\r\n\r\nexport function changeSong(id) {\r\n    return (dispatch) => {\r\n        const currSong = {\r\n            id,\r\n            isPlaying: true,\r\n            secPlayed: 0\r\n        };\r\n        socketService.emit('set currSong', currSong);\r\n        dispatch({ type: 'SET_CURR_SONG', currSong });\r\n    }\r\n}\r\n\r\nexport function updateProgress(secPlayed) {\r\n    return (dispatch, getState) => {\r\n        const currSong = {\r\n            ...getState().boxReducer.currSong, secPlayed\r\n        }\r\n        socketService.emit('update backend currSong', currSong);\r\n        dispatch({ type: 'SET_CURR_SONG', currSong });\r\n    }\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n// LOCAL IMPORTS\r\nimport { changeSong, togglePlay } from '../../store/actions/playerActions';\r\n\r\nexport class _SongPreview extends Component {\r\n    state = {\r\n        isRemoveOpen: false,\r\n        timeoutId: null,\r\n    }\r\n    toggleRemoveOpen = (ev) => {\r\n        ev.stopPropagation();\r\n        const timeoutId = setTimeout(() => this.setState({ isRemoveOpen: false }), 2000);\r\n        this.setState(prevState => ({ isRemoveOpen: !prevState.isRemoveOpen, timeoutId }));\r\n    }\r\n\r\n    remove = (ev, songId) => {\r\n        clearTimeout(this.state.timeoutId);\r\n        ev.stopPropagation();\r\n        this.props.onRemoveSong(songId);\r\n    }\r\n\r\n    render() {\r\n        const { currSong, songDetails, index, isFilter, togglePlay } = this.props;\r\n        const { isRemoveOpen } = this.state;\r\n        const isSongPlaying = (songDetails.id === currSong?.id) && currSong?.isPlaying;\r\n        return (\r\n            <Draggable draggableId={songDetails.id} index={index} isDragDisabled={isFilter}>\r\n                {provided => (\r\n                    <li\r\n\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n\r\n                        className=\"song-preview flex space-between\"\r\n                        onDoubleClick={() => this.props.changeSong(songDetails.id)}\r\n                    >\r\n\r\n                        <div className=\"song-data flex align-center\">\r\n                            <div className=\"play-icon-container flex align-center cursor-pointer\">\r\n                                {isSongPlaying ?\r\n                                    <PauseIcon\r\n                                        onClick={() => togglePlay(currSong)}\r\n                                        className={`play-icon ${isSongPlaying ? 'now-playing' : ''}`}\r\n                                    /> :\r\n                                    <PlayArrowIcon\r\n                                        onClick={() => this.props.changeSong(songDetails.id)}\r\n                                        className=\"play-icon\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"song-preview-img\"><img src={songDetails.imgUrl} alt=\"song-img\" /></div>\r\n                            <h3 className={(isSongPlaying) ? 'now-playing' : ''}>{songDetails.title}</h3>\r\n                        </div>\r\n                        <div className=\"song-preview-btns flex align-center\">\r\n                            <h3 className=\"song-duration\">{songDetails.duration || ''}</h3>\r\n                            <img className={`playing-anim ${(isSongPlaying) ? '' : 'invisible'}`} src={require('../../assets/img/equalizer5.gif')} title=\"Now playing\" alt=\"now-playing\" />\r\n                        {isRemoveOpen ?\r\n                            <div\r\n                                onClick={(ev) => this.remove(ev, songDetails.id)}\r\n                                className={`remove-song-btn ${isRemoveOpen ? '' : 'invisible'}`}\r\n                            >\r\n                                <DeleteOutlineIcon />\r\n                            </div> :\r\n\r\n                            <div><MoreVertIcon className=\"cursor-pointer\" onClick={this.toggleRemoveOpen} /></div>\r\n                        }\r\n                        </div>\r\n                    </li>\r\n        )\r\n    }\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currSong: state.boxReducer.currSong\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    togglePlay,\r\n    changeSong\r\n}\r\n\r\n\r\nexport const SongPreview = connect(mapStateToProps, mapDispatchToProps)(_SongPreview);","// OUTSOURCE IMPORTS\r\nimport React from 'react'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nexport function SongPreviewExample({ isFirst }) {\r\n    let num = parseInt(Math.random() * 40 + 40)\r\n\r\n    return (\r\n        <li key={isFirst ? 1 : 2} className=\"song-preview flex space-between\">\r\n            < div className=\"song-data flex align-center\" >\r\n                <div className=\"play-icon-container flex align-center\">\r\n                    {isFirst ? <PauseIcon className=\"play-icon now-playing\" /> :\r\n                        <PlayArrowIcon className=\"play-icon\" />}\r\n                </div>\r\n                <div className=\"song-preview-img\"><img src={`https://picsum.photos/id/${num}/120/90`} alt=\"song-img\" /></div>\r\n                <h3 className={isFirst ? 'now-playing' : ''}>{isFirst ? `Your songs go here... Click '+' to add them` : 'This could be your song'}</h3>\r\n            </div >\r\n            <div className=\"song-preview-btns flex align-center\">\r\n                <h3 className=\"song-duration\">{isFirst ? '3:22' : '4:15'}</h3>\r\n                {<img className={`playing-anim ${isFirst ? '' : 'invisible'}`} src={require('../../assets/img/equalizer5.gif')} title=\"Now playing\" alt=\"now-playing\" />}\r\n                <div><MoreVertIcon /></div>\r\n            </div>\r\n        </li >\r\n    )\r\n}","// OUTSOURCE IMPORTS\r\nimport React from 'react'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Delete } from '@material-ui/icons';\r\n\r\n// LOCAL IMPORTS\r\nimport { SongPick } from './SongPick'\r\nimport { SongPreview } from './SongPreview'\r\nimport { SongPreviewExample } from './SongPreviewExample'\r\n\r\nexport function SongList({ songs, onRemoveSong, onAddSong, isSongPickOpen, isFilter, isDragging, onDragEnd, onDragStart }) {\r\n    return (\r\n        <React.Fragment>\r\n            <DragDropContext\r\n                onDragStart={onDragStart}\r\n                onDragEnd={onDragEnd}\r\n            >\r\n                <div className=\"song-list flex space-between\">\r\n\r\n                    <Droppable droppableId={'songPick'}>\r\n                        {(provided) => (\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                className={`song-pick-container ${isSongPickOpen && 'opened'}`}\r\n                            >\r\n                                <SongPick isSongPickOpen={isSongPickOpen} onAddSong={onAddSong} />\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n\r\n                    {/* {!songs.length && <ul className=\"clean-list flex column flex-1\">\r\n                    {example}\r\n                </ul>} */}\r\n\r\n                    <Droppable droppableId={'songList'}>\r\n                        {(provided) => (\r\n                            <ul\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                className={`clean-list flex column flex-1`}\r\n                            >\r\n                                {(!songs.length && !isFilter) && <React.Fragment>\r\n                                    <SongPreviewExample key={1} isFirst={true} />\r\n                                    <SongPreviewExample key={2} isFirst={false} />\r\n                                </React.Fragment>}\r\n                                {(!songs.length && isFilter) && <li>No search results...</li>}\r\n                                {\r\n                                    songs.map((song, index) => {\r\n                                        return <SongPreview\r\n                                            key={song.id}\r\n                                            index={index}\r\n                                            onRemoveSong={onRemoveSong}\r\n                                            songDetails={song}\r\n                                            isFilter={isFilter}\r\n                                        />\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n\r\n                <Droppable droppableId={'trash'}>\r\n                    {provided => (\r\n                        <div\r\n                            ref={provided.innerRef} {...provided.droppableProps}\r\n                            className={`remove-song-drag flex ${isDragging ? 'opened' : ''}`}\r\n                        >\r\n                            <Delete className=\"bin\" />\r\n                            {/* {provided.placeholder} */}\r\n                        </div>\r\n                    )\r\n                    }\r\n                </Droppable>\r\n            </DragDropContext >\r\n        </React.Fragment>\r\n    )\r\n}","export const cloudService = {\r\n    uploadImg,\r\n    makeFaceThumb\r\n}\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"dawzeno7k\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'beatboximg');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data.secure_url\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction makeFaceThumb(img) {\r\n    let imgUrl = img.split('/');\r\n    imgUrl.splice(6, 0, 'w_200,h_200,c_thumb,g_face')\r\n    imgUrl = imgUrl.join('/')\r\n    return imgUrl;\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading';\r\n\r\n// LOCAL IMPORTS\r\nimport { cloudService } from '../../services/cloudService';\r\n\r\nexport class BoxInfo extends Component {\r\n    state = {\r\n        box: null,\r\n        isEditableName: false,\r\n        isEditableDesc: false,\r\n        isEditableImg: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { box } = this.props;\r\n        this.setState({ box });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const newBox = this.props.box;\r\n        if (prevProps.box === newBox) return;\r\n        this.setState({ box: newBox });\r\n    }\r\n\r\n    onEdit = (field) => {\r\n        this.setState({ [field]: true })\r\n    }\r\n\r\n    onSave = (field) => {\r\n        this.setState({ [field]: false });\r\n        const newBox = { ...this.state.box }\r\n        this.props.onSaveInfo(newBox);\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    async uploadImg(ev) {\r\n        const imgUrl = await cloudService.uploadImg(ev)\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    imgUrl\r\n                }\r\n            }\r\n        })\r\n        this.onSave('isEditableImg');\r\n    }\r\n\r\n    render() {\r\n        const { box, isEditableName, isEditableDesc } = this.state;\r\n        if (!box) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        return (\r\n            <section className=\"box-info flex\">\r\n                <div className=\"box-img\">\r\n                    <label className=\"upload-label\" style={{ cursor: 'pointer' }}>\r\n                        <input onChange={(ev) => this.uploadImg(ev)} type=\"file\" hidden />\r\n                        <img\r\n                            crossOrigin={\"anonymous\"}\r\n                            ref={this.props.imgRef}\r\n                            src={box.imgUrl}\r\n                            alt=\"\"\r\n                            onLoad={this.props.getDominantColor} />\r\n                    </label>\r\n                </div>\r\n                <div className=\"info-txt flex space-between column\">\r\n                    <div className=\"info-header flex align-end flex-1\">\r\n                        {isEditableName ?\r\n                            <React.Fragment>\r\n                                <input autoFocus type=\"txt\" value={box.name} name=\"name\" onChange={this.handleInput} />\r\n                                <div className=\"btn-hide-container\">\r\n                                    <button className=\"save-btn\" onClick={() => this.onSave('isEditableName')} ><SaveIcon /></button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <h2 className=\"box-name\"> {box.name}</h2>\r\n                                <button onClick={() => this.onEdit('isEditableName')} className=\"hide-btn\"><CreateIcon /></button>\r\n\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"info-description flex\">\r\n                        {!isEditableDesc && <p className=\"box-description\"> {box.description}</p>}\r\n                        <div className=\"btn-hide-container\">\r\n                            {!isEditableDesc && <button onClick={() => this.onEdit('isEditableDesc')} className=\"hide-btn\"><CreateIcon /></button>}\r\n                        </div>\r\n                        {isEditableDesc && <textarea autoFocus type=\"txt\" value={box.description} name=\"description\" onChange={this.handleInput} />}\r\n                        {isEditableDesc && <button className=\"save-btn\" onClick={() => this.onSave('isEditableDesc')} ><SaveIcon /></button>}\r\n                    </div>\r\n                    <h4>{box.genre}</h4>\r\n\r\n                    <div className=\"info-creator flex align-center\">\r\n                        <h5>Created By: </h5>\r\n                        <Avatar alt=\"Remy Sharp\" src={box.createdBy.imgUrl} style={{ width: '35px', height: '35px' }} />\r\n                        <h5>{box.createdBy.name}</h5>\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","export function loadMsgs(msgs) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_MSGS', msgs })\r\n  };\r\n}\r\n\r\nexport function addMsg(msg) {\r\n  return dispatch => {\r\n    dispatch({ type: 'ADD_MSG', msg })\r\n  };\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { SystemMessage } from 'react-chat-elements'\r\nimport { Input } from 'react-chat-elements'\r\nimport { Button } from 'react-chat-elements'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport 'react-chat-elements/dist/main.css';\r\n\r\n// LOCAL IMPORTS\r\nimport { socketService } from '../../services/socketService'\r\nimport { addMsg, loadMsgs } from '../../store/actions/msgAction'\r\n\r\nclass _BoxChat extends Component {\r\n    state = {\r\n        msgs: [],\r\n        msg: '',\r\n        isTyping: false,\r\n        typingStr: '',\r\n    }\r\n\r\n    inputRef = React.createRef();\r\n    chatRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        socketService.on('chat showTyping', this.onTyping);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('chat showTyping', this.onTyping);\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.chatRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    onTyping = typingStr => {\r\n        this.setState({ typingStr })\r\n    }\r\n\r\n    onHandleChange = async (ev) => {\r\n        if (!ev.target.value) return;\r\n        var timeout;\r\n        if (!this.state.isTyping) {\r\n            clearTimeout(timeout);\r\n            this.setState({ isTyping: true });\r\n            const userName = this.props.user.username;\r\n            const typingStr = userName + ' is typing...';\r\n            socketService.emit('chat typing', typingStr);\r\n            timeout = setTimeout(this.timeoutFunction, 1500);\r\n        } else {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(this.timeoutFunction, 1500);\r\n        }\r\n        await this.setState({ msg: ev.target.value });\r\n    }\r\n\r\n    timeoutFunction = () => {\r\n        this.setState({ isTyping: false });\r\n        socketService.emit('chat typing', '');\r\n    }\r\n\r\n    sendMsg = (ev) => {\r\n        const { msg } = this.state;\r\n        if (msg) {\r\n            const msgObj = {\r\n                text: msg,\r\n                submitAt: new Date(),\r\n                id: this.props.user._id,\r\n                submitBy: this.props.user.username,\r\n                avatar: this.props.user.imgUrl,\r\n            }\r\n            socketService.emit('chat newMsg', msgObj);\r\n        }\r\n        this.setState({ msg: '' })\r\n        this.inputRef.clear();\r\n    };\r\n\r\n    getMsgsArr() {\r\n        const { msgs, user } = this.props;\r\n        const msgsArr = [];\r\n        msgs.forEach((msg, idx) => {\r\n            let classUser;\r\n            let classPosition = '';\r\n            let title;\r\n            if (msg.id === user._id) {\r\n                title = 'you';\r\n                classUser = 'user-message';\r\n                classPosition = 'flex-end'\r\n            } else {\r\n                title = msg.submitBy;\r\n                classUser = 'not-user-message';\r\n            }\r\n            const date = new Date(msg.submitAt);\r\n            const dateToString = `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n            if (msg.id === 'system') {\r\n                msgsArr.push(<SystemMessage\r\n                    key={idx} text={msg.text} />)\r\n            }\r\n            else {\r\n                msgsArr.push(\r\n                    <div key={idx} className={`msg flex column ${classPosition}`} >\r\n                        <div className={`msg-data flex align-center`}>\r\n                            {!classPosition && <Avatar title={user.fullName} alt=\"User\" src={msg.avatar} style={{ width: '20px', height: '20px' }} />}\r\n                            <p className=\"submit-by\">{title}</p>\r\n                            {dateToString}\r\n                        </div>\r\n                        <div className={`msg-text ${classUser}`}>\r\n                            {msg.text}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return msgsArr;\r\n    }\r\n\r\n\r\n    getConnectedAvatars() {\r\n        const { connectedUsers } = this.props;\r\n        return connectedUsers.map(user => {\r\n            return <Avatar key={user.id} alt={user.username} src={user.imgUrl} />\r\n        })\r\n    }\r\n\r\n    onKeyUp = (ev) => {\r\n        if (ev.key === 'Enter') this.sendMsg();\r\n    }\r\n\r\n    render() {\r\n        const { typingStr } = this.state;\r\n        const avatarsConnectedUser = this.getConnectedAvatars();\r\n        return (\r\n            <section className=\"wall-container flex column space-between\">\r\n                <h2 className=\"chat-title\"> Box Wall </h2>\r\n                <div className=\"connected-users flex justify-center\">\r\n                    < AvatarGroup max={4}>\r\n                        {avatarsConnectedUser}\r\n                    </AvatarGroup >\r\n                </div>\r\n                <div className=\"msgs\">\r\n                    {this.getMsgsArr()}\r\n                    <div className=\"typing-container\">\r\n                        {typingStr && <h3>{typingStr}</h3>}\r\n                    </div>\r\n                    <div ref={this.chatRef}></div>\r\n                </div>\r\n                <div className=\"input-msg\">\r\n                    <Input\r\n                        ref={el => (this.inputRef = el)}\r\n                        onChange={this.onHandleChange}\r\n                        placeholder=\"Type here...\"\r\n                        onKeyUp={this.onKeyUp}\r\n                        rightButtons={\r\n                            <Button\r\n                                className=\"btn-send\"\r\n                                text='Send'\r\n                                onClick={this.sendMsg}\r\n                                backgroundColor='#18191a'\r\n                            />\r\n                        }\r\n                    />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n        msgs: state.msgReducer.msgs,\r\n        box: state.boxReducer.currBox,\r\n        connectedUsers: state.connectedUsersReducer.connectedUsers\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadMsgs,\r\n    addMsg\r\n}\r\n\r\nexport const BoxChat = connect(mapStateToProps, mapDispatchToProps)(_BoxChat)\r\n","export function loadConnectedUsers(connectedUsers) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_CONNECTED_USERS', connectedUsers })\r\n  }\r\n}","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport WhatsappIcon from '@material-ui/icons/WhatsApp';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport ColorThief from \"colorthief\";\r\nimport { Swipeable } from \"react-swipeable\";\r\n// LOCAL IMPORT\r\nimport { youtubeService } from '../services/youtubeService';\r\nimport { boxService } from '../services/boxService'\r\nimport { userService } from '../services/userService';\r\nimport { socketService } from '../services/socketService';\r\nimport { SongList } from '../cmps/box-details/SongList'\r\nimport { BoxInfo } from '../cmps/box-details/BoxInfo'\r\nimport { BoxChat } from '../cmps/box-details/BoxChat'\r\nimport { loadBox, updateBox, gotBoxUpdate } from '../store/actions/boxAction'\r\nimport { addMsg, loadMsgs } from '../store/actions/msgAction'\r\nimport { changeSong, updateLocalPlayer } from '../store/actions/playerActions'\r\nimport { loadConnectedUsers } from '../store/actions/connectedUsersAction'\r\n\r\nclass _BoxDetails extends Component {\r\n    state = {\r\n        isSongPickOpen: false,\r\n        isDragging: false,\r\n        msgs: [],\r\n        dominantColor: '',\r\n        isMobileChatOpen: false,\r\n        isClipboardToast: false,\r\n        isFavorite: false,\r\n        isGuestMode: false\r\n    }\r\n\r\n    imgRef = React.createRef();\r\n\r\n    async componentDidMount() {\r\n        const boxId = this.props.match.params.boxId;\r\n        const minimalUser = userService.getMinimalUser();\r\n        await this.props.loadBox(boxId);\r\n        const isFavorite = await userService.isBoxFavorite(this.props.user, boxId);\r\n        this.setState({ isFavorite });\r\n\r\n        // SOCKET JOIN TO BOX\r\n        const boxInfo = {\r\n            boxId,\r\n            user: minimalUser\r\n        }\r\n        socketService.emit('join box', boxInfo);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.match.params.boxId !== this.props.currBox._id) {\r\n            this.props.loadBox(this.props.match.params.boxId);\r\n        }\r\n    }\r\n\r\n    onRemoveSong = (songId) => {\r\n        const { currSong } = this.props;\r\n        const newBox = { ...this.props.currBox }\r\n        const songIdx = newBox.songs.findIndex(song => song.id === songId)\r\n        if (!currSong || currSong.id === songId) {\r\n            if (newBox.songs.length === 1) {\r\n                this.props.updateLocalPlayer(null);\r\n            } else if (currSong && currSong.isPlaying) {\r\n                let nextSongIdx = songIdx + 1;\r\n                if (nextSongIdx === newBox.songs.length) nextSongIdx = 0;\r\n                this.props.changeSong(newBox.songs[nextSongIdx].id);\r\n            }\r\n        }\r\n        const [song] = newBox.songs.splice(songIdx, 1);\r\n        this.addMsgChat(`Song ${song.title} removed by ${this.props.user.username}`);\r\n        this.props.updateBox(newBox);\r\n    }\r\n\r\n    onAddSong = async (song, idx, isFromDrag) => {\r\n        const newSong = await boxService.addSong(song, isFromDrag);\r\n        const newBox = { ...this.props.currBox };\r\n        if (idx) {\r\n            newBox.songs.splice(idx, 0, newSong);\r\n        }\r\n        else newBox.songs.unshift(newSong);\r\n        this.addMsgChat(`Song ${newSong.title} added by ${this.props.user.username}`);\r\n        this.props.updateBox(newBox);\r\n    }\r\n\r\n    onSaveInfo = (box) => {\r\n        this.props.updateBox(box);\r\n    }\r\n\r\n    getSongsForDisplay = () => {\r\n        const songs = this.props.currBox.songs.filter(song => {\r\n            return song.title.toLowerCase().includes(this.props.filter.toLowerCase());\r\n        })\r\n        return songs;\r\n    }\r\n\r\n    toggleSongPick = () => {\r\n        this.setState(prevState => ({ isSongPickOpen: !prevState.isSongPickOpen }))\r\n    }\r\n\r\n    onDragStart = () => {\r\n        this.setState({ isDragging: true })\r\n    }\r\n\r\n    onDragEnd = async (result) => {\r\n        const { destination, source, draggableId } = result;\r\n\r\n        this.setState({ isDragging: false })\r\n        if (!destination) return;\r\n        if (destination.droppableId === 'songPick') return;\r\n        if (source.droppableId === 'songList' && destination.droppableId === 'trash') {\r\n            this.onRemoveSong(draggableId)\r\n            return;\r\n        }\r\n        if (source.droppableId === 'songPick' && destination.droppableId === 'songList') {\r\n            let song = await youtubeService.getSongById(draggableId);\r\n            [song] = song.items;\r\n            this.onAddSong(song, destination.index, true);\r\n            return;\r\n        }\r\n\r\n        if (destination.index === source.index) return;\r\n        else this.onSwapSongs(source.index, destination.index);\r\n    }\r\n\r\n    addMsgChat = (msg) => {\r\n        const msgObj = {\r\n            text: msg,\r\n            id: 'system',\r\n            submitBy: 'system',\r\n            avatar: this.props.user.imgUrl,\r\n        }\r\n        socketService.emit('chat newMsg', msgObj);\r\n    }\r\n\r\n    onSwapSongs = (srcIdx, destIdx) => {\r\n        const newSongs = [...this.props.currBox.songs];\r\n        const [songToMove] = newSongs.splice(srcIdx, 1);\r\n        newSongs.splice(destIdx, 0, songToMove);\r\n        const newBox = { ...this.props.currBox, songs: newSongs };\r\n        this.props.updateBox(newBox);\r\n    }\r\n\r\n    getDominantColor = () => {\r\n        const colorThief = new ColorThief();\r\n        const img = this.imgRef.current;\r\n        let result = colorThief.getColor(img, 50);\r\n        if (result.every(color => color > 180)) result = result.map(color => (color > 150) ? 150 : color);\r\n        this.setState({ dominantColor: result });\r\n    }\r\n\r\n    toggleClipboardToast = () => {\r\n        this.setState({ isClipboardToast: true });\r\n        setTimeout(() => this.setState({ isClipboardToast: false }), 2000);\r\n    }\r\n\r\n    toggleGuestMode = () => {\r\n        this.setState({ isGuestMode: true });\r\n        setTimeout(() => this.setState({ isGuestMode: false }), 2000);\r\n    }\r\n\r\n    openMobileChat = () => {\r\n        this.setState({ isMobileChatOpen: true })\r\n    }\r\n\r\n    closeMobileChat = () => {\r\n        this.setState({ isMobileChatOpen: false })\r\n    }\r\n\r\n    toggleMobileChat = () => {\r\n        this.setState({ isMobileChatOpen: !this.state.isMobileChatOpen })\r\n    }\r\n\r\n    onToggleToFavorite = async () => {\r\n        if (this.props.user.isGuest) {\r\n            this.toggleGuestMode();\r\n            return;\r\n        }\r\n        const boxId = this.props.currBox._id;\r\n        await userService.toggleToFavorite(boxId);\r\n        this.setState({ isFavorite: !this.state.isFavorite });\r\n    }\r\n\r\n    getIfBoxFavorite = async () => {\r\n        const boxId = this.props.currBox._id;\r\n        const userId = this.props.user._id;\r\n        const isFavoriteIdx = await userService.isBoxFavorite(userId, boxId)\r\n        const isFavorite = (isFavoriteIdx === -1) ? true : false;\r\n        return isFavorite;\r\n    }\r\n\r\n    render() {\r\n        const { isSongPickOpen, isDragging, isFavorite } = this.state;\r\n        const { currBox, filter } = this.props;\r\n        if (!currBox) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        const songsToShow = this.getSongsForDisplay();\r\n        const minimalUser = userService.getMinimalUser();\r\n        const swipeConfig = {\r\n            onSwipedRight: () => this.openMobileChat(),\r\n            onSwipedLeft: () => this.closeMobileChat(),\r\n            preventDefaultTouchmoveEvent: true,\r\n            trackMouse: true\r\n        };\r\n\r\n        return (\r\n            <Swipeable {...swipeConfig}>\r\n                <section className=\"box-details\" style={{ backgroundColor: `rgb(${this.state.dominantColor})` }}>\r\n                    <div className=\"box-details-main flex column\">\r\n\r\n                        <BoxInfo\r\n                            getDominantColor={this.getDominantColor}\r\n                            imgRef={this.imgRef}\r\n                            box={currBox}\r\n                            onSaveInfo={this.onSaveInfo}\r\n                            minimalUser={minimalUser}\r\n                        />\r\n\r\n                        <div className=\"song-social-actions flex space-between\">\r\n                            <div className=\"btns-container flex align-center\">\r\n                                <Fab className={`add-song-btn  ${isSongPickOpen ? 'opened' : ''}`}\r\n                                    onClick={this.toggleSongPick}\r\n                                    aria-label=\"add\"\r\n                                >\r\n                                    <AddIcon />\r\n                                </Fab>\r\n\r\n                                <div title=\"Add to favorite\" className={`like-btn flex align-center ${isFavorite ? \"favorite\" : \"\"}`}>\r\n                                    <FavoriteIcon onClick={this.onToggleToFavorite} />\r\n                                    {this.state.isGuestMode && <div className=\"guest-msg\"><small>Signup to enjoy favorite feature</small></div>}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"share-container flex space-between column\">\r\n                                <p>Invite a friend to join you:</p>\r\n                                <div className=\"share-btns flex space-evenely\">\r\n                                    <a className=\"facebook-share-btn\"\r\n                                        href={`https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`}\r\n                                        rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                        <FacebookIcon />\r\n                                    </a>\r\n                                    <a className=\"whatsapp-share-btn\"\r\n                                        href={`whatsapp://send?text=${currBox.createdBy.name} Shared a Box With You! : \\n\\n ${window.location.href}`}\r\n                                        data-action=\"share/whatsapp/share\">\r\n                                        <WhatsappIcon />\r\n                                    </a>\r\n                                    <CopyToClipboard className=\"copy-share-btn\" text={window.location.href}>\r\n                                        <LinkIcon onClick={this.toggleClipboardToast} style={{ transform: 'rotate(45deg) translateY(1px) translateX(4px)' }} />\r\n                                    </CopyToClipboard>\r\n                                </div>\r\n                                {this.state.isClipboardToast && <div className=\"copied-to-clipboard\"><small>Link copied to your clipboard!</small></div>}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <SongList\r\n                            songs={songsToShow}\r\n                            onRemoveSong={this.onRemoveSong}\r\n                            onAddSong={this.onAddSong}\r\n                            isSongPickOpen={isSongPickOpen}\r\n                            onDragStart={this.onDragStart}\r\n                            onDragEnd={this.onDragEnd}\r\n                            isFilter={!!filter}\r\n                            isDragging={isDragging}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={`${this.state.isMobileChatOpen ? 'chat-open' : ''} chat-box flex column align-center`} >\r\n                        <BoxChat />\r\n                    </div>\r\n\r\n                    {/* <button className={`${this.state.isMobileChatOpen ? 'chat-open' : ''} mobile-chat-btn`}\r\n                        onClick={this.toggleMobileChat}><QuestionAnswerIcon /></button> */}\r\n                </section>\r\n            </Swipeable>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currBox: state.boxReducer.currBox,\r\n        currSong: state.boxReducer.currSong,\r\n        filter: state.boxReducer.filter,\r\n        user: state.userReducer.loggedinUser,\r\n        msgs: state.msgReducer.msgs,\r\n        connectedUsers: state.connectedUsersReducer.connectedUsers\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBox,\r\n    updateBox,\r\n    addMsg,\r\n    loadMsgs,\r\n    updateLocalPlayer,\r\n    gotBoxUpdate,\r\n    loadConnectedUsers,\r\n    changeSong\r\n}\r\nexport const BoxDetails = connect(mapStateToProps, mapDispatchToProps)(_BoxDetails);","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n// LOCAL IMPORT\r\nimport { boxService } from '../services/boxService'\r\n\r\nexport class _GenresFilter extends Component {\r\n    state = {\r\n        genres: [],\r\n        isScrolled: false\r\n    }\r\n\r\n    executeScroll = (scrollTo) => {\r\n        let scrollDiff = this.ref.current.scrollWidth - this.ref.current.offsetWidth\r\n\r\n        if (this.ref.current.scrollLeft !== 0) {\r\n            this.setState({ isScrolled: true });\r\n        }\r\n        if (this.ref.current.scrollLeft >= scrollDiff) {\r\n            this.ref.current.scrollLeft = 0\r\n            this.setState({ isScrolled: false })\r\n        }\r\n        else if (this.ref.current.scrollLeft < scrollDiff) {\r\n            this.ref.current.scrollLeft += scrollTo\r\n        }\r\n        else {\r\n            this.setState({ isScrolled: false })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ref = React.createRef()\r\n        const genres = boxService.getAllGenres();\r\n        this.setState({ genres: [...genres]});\r\n    }\r\n\r\n    getQueryParams = (genre) => {\r\n        let query = new URLSearchParams(this.props.history.location.search);\r\n        query.set('genre', genre);\r\n        return query.toString();\r\n    }\r\n\r\n    getCurrGenre = () => {\r\n        const urlParams = new URLSearchParams(this.props.history.location.search)\r\n        return urlParams.get('genre');\r\n    }\r\n\r\n    render() {\r\n        const { genres} = this.state;\r\n        if (!genres.length) return <h1>Loading...</h1>\r\n        const currGenre = this.getCurrGenre();\r\n        const isFiltered = !!this.props.location.search;\r\n        return (\r\n            <div className=\"main-container\">\r\n\r\n                <div className=\"btns-filter\" ref={this.ref}>\r\n\r\n                    {this.state.isScrolled && <button className=\"list-left-btn\" onClick={() => this.executeScroll(-100)}><ArrowBackIosIcon /></button>}\r\n\r\n                    <Link to=\"/box\" className={`btn-filter flex justify-center align-center${!isFiltered ? 'active-filter' : ''}`} >All</Link>\r\n                    {genres.map((genre, idx) => {\r\n                        return <Link\r\n                            to={`/box?${this.getQueryParams(genre)}`}\r\n                            className={`btn-filter ${(genre === currGenre) ? 'active-filter' : ''}`}\r\n                            key={idx} > {genre}\r\n                        </Link>\r\n                    })\r\n                    }\r\n\r\n                    <button className=\"list-right-btn\" onClick={() => this.executeScroll(100)}><ArrowForwardIosIcon /></button>\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const GenresFilter = withRouter(_GenresFilter);","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading'\r\n// LOCAL IMPORT\r\nimport { BoxList } from '../cmps/boxes/BoxList'\r\nimport { GenresFilter } from '../cmps/GenresFilter'\r\nimport { userService } from '../services/userService'\r\nimport { loadBoxes } from '../store/actions/boxAction'\r\n\r\nclass _BoxApp extends Component {\r\n    componentDidMount() {\r\n        this.onLoadBoxes()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.search === prevProps.location.search) return;\r\n        this.onLoadBoxes();\r\n    }\r\n\r\n    onLoadBoxes = () => {\r\n        this.props.loadBoxes(this.props.location.search);\r\n    }\r\n\r\n    render() {\r\n        const { boxes, genres } = this.props;\r\n        const minimalUser = userService.getMinimalUser();\r\n        if (!boxes) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n\r\n        return (\r\n            <section className=\"box-app\" id=\"box\">\r\n                {!!genres && genres.map((genre, idx) => {\r\n                    return (\r\n                        <BoxList\r\n                            boxes={boxes}\r\n                            key={idx}\r\n                            genre={genre}\r\n                            minimalUser={minimalUser}\r\n                        />\r\n                    )\r\n                })}\r\n                {!genres && <GenresFilter genreCount={5} />}\r\n                {!genres && <BoxList boxes={boxes} minimalUser={minimalUser} />}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boxes: state.boxReducer.boxes,\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoxes,\r\n}\r\n\r\nexport const BoxApp = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoxApp))","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading';\r\n\r\n// LOCAL IMPORTS\r\nimport { cloudService } from '../../services/cloudService'\r\nimport { boxService } from '../../services/boxService'\r\nimport imgPlaceholder from '../../assets/img/img_placeholder.png';\r\n\r\nexport class BoxInfoEdit extends Component {\r\n    state = {\r\n        box: {\r\n            name: '',\r\n            genre: '',\r\n            description: '',\r\n            imgUrl: null\r\n        },\r\n    }\r\n\r\n    onSaveInfo = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.onSaveInfo(this.state.box);\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name;\r\n        const value = target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    [field]: value\r\n                }\r\n            }\r\n        }, () => this.props.updateBox(this.state.box))\r\n\r\n    }\r\n\r\n    getGenresOptions() {\r\n        const genres = boxService.getAllGenres();\r\n        return genres.map((genre, idx) => {\r\n            return <option key={idx} value={genre}>{genre}</option>\r\n        })\r\n    }\r\n\r\n    async uploadImg(ev) {\r\n        this.props.setIsLoading(true);\r\n        const imgUrl = await cloudService.uploadImg(ev);\r\n        this.props.setIsLoading(false);\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                box: {\r\n                    ...prevState.box,\r\n                    imgUrl\r\n                }\r\n            }\r\n        }, () => this.props.updateBox(this.state.box))\r\n    }\r\n\r\n    render() {\r\n        const { box } = this.state;\r\n        if (!box) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        return (\r\n            <form>\r\n                <div className=\"box-add-form flex column\">\r\n\r\n                    <div className=\"box-add-thumbnail flex\">\r\n                        <label className=\"upload-label\" style={{ cursor: 'pointer' }} >\r\n                            <input onChange={(ev) => this.uploadImg(ev)} type=\"file\" hidden />\r\n                            <img src={box.imgUrl || imgPlaceholder} alt=\"box\" />\r\n                            <div>\r\n                                {box.imgUrl ? '' : 'Upload Image'}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"inputs flex column align-center\">\r\n\r\n                        <label>Name:</label>\r\n                        <input\r\n                            className=\"short-input\"\r\n                            autoComplete=\"off\"\r\n                            autoFocus\r\n                            type=\"txt\"\r\n                            value={box.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleInput}\r\n                            placeholder=\"Box Name\"\r\n                        />\r\n\r\n                        <label>Genre:</label>\r\n                        <select\r\n                            className=\"short-input\"\r\n                            id=\"genre\"\r\n                            name=\"genre\"\r\n                            onChange={this.handleInput}\r\n                        >\r\n                            <option disabled selected value=\"\">Select genre</option>\r\n                            {this.getGenresOptions()}\r\n                        </select>\r\n\r\n                        <label>Description:</label>\r\n                        <textarea\r\n                            type=\"txt\"\r\n                            value={box.description}\r\n                            name=\"description\"\r\n                            onChange={this.handleInput}\r\n                            placeholder=\"About the box\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form >\r\n        )\r\n    }\r\n}\r\n\r\n","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport CircleLoading from 'react-loadingg/lib/CircleLoading'\r\n// LOCAL IMPORTS\r\nimport { boxService } from '../services/boxService'\r\nimport { userService } from '../services/userService'\r\nimport { saveBox, loadBoxes } from '../store/actions/boxAction'\r\nimport { BoxInfoEdit } from '../cmps/box-details/BoxInfoEdit'\r\n\r\nexport class _BoxAdd extends Component {\r\n    state = {\r\n        editBox: null,\r\n        msgWarning: '',\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNewBox();\r\n    }\r\n\r\n    setNewBox = () => {\r\n        const minimalUser = userService.getMinimalUser();\r\n        const emptyBox = boxService.getEmptyBox(minimalUser);\r\n        this.setState({ editBox: emptyBox });\r\n    }\r\n\r\n    printMsg(msg) {\r\n        this.setState({ msgWarning: msg });\r\n        setTimeout(() => {\r\n            this.setState({ msgWarning: '' });\r\n        }, 2000)\r\n    }\r\n\r\n    setIsLoading = (isLoading) => {\r\n        this.setState({ isLoading });\r\n    }\r\n\r\n    updateBox = (box) => {\r\n        this.setState(prevState => ({\r\n            editBox:\r\n            {\r\n                ...prevState.editBox,\r\n                name: box.name,\r\n                genre: box.genre,\r\n                description: box.description,\r\n                imgUrl: box.imgUrl\r\n            }\r\n        }));\r\n    }\r\n\r\n    onAddBox = async (ev) => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        if (!this.state.editBox.name) {\r\n            this.printMsg('Name of box is required');\r\n            return;\r\n        }\r\n        if (!this.state.editBox.genre) {\r\n            this.printMsg('Genre of box is required');\r\n            return;\r\n        }\r\n\r\n        const addedBox = await this.props.saveBox(this.state.editBox);\r\n        this.props.loadBoxes();\r\n        this.props.history.push(`/box/details/${addedBox._id}`);\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.history.goBack();\r\n        this.setNewBox();\r\n    }\r\n\r\n    render() {\r\n        const { editBox } = this.state;\r\n        if (!editBox) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        return (\r\n            <section onClick={this.closeModal} className=\"box-add-container flex justify-center\">\r\n                \r\n                <div className=\"box-add-modal flex column\" onClick={ev => ev.stopPropagation()}>\r\n\r\n                    <h2>Create your own Box</h2>\r\n\r\n                    <BoxInfoEdit updateBox={this.updateBox} setIsLoading={this.setIsLoading} />\r\n\r\n                        <button\r\n                            disabled={this.state.isLoading}\r\n                            className={`btn-create ${this.state.isLoading ? 'faded-btn' : ''}`}\r\n                            onClick={this.onAddBox}\r\n                        >\r\n                            Create Box\r\n                        </button>\r\n                        {this.state.msgWarning && <label className=\"msg-warnning\">{this.state.msgWarning}</label>}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBox,\r\n    loadBoxes\r\n}\r\n\r\nexport const BoxAdd = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoxAdd))","// OUTSOURCE IMPORTS\r\nimport React from 'react'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n// LOCAL IMPORTS\r\nimport imgIdan from '../assets/img/idan.jpeg';\r\nimport imgHilla from '../assets/img/hilla.jpg';\r\nimport imgMatan from '../assets/img/matan.jpg';\r\n\r\nexport function Footer() {\r\n    return (\r\n        <footer className=\"footer flex column align-center justify-center\">\r\n            <div className=\"container flex justify-center\">\r\n                <div className=\"developer flex align-center \">\r\n                    <img alt=\"Idan\" src={imgIdan} />\r\n                    <p>Idan Benjamin</p>\r\n                    <a href=\"https://www.linkedin.com/in/idanbenjamin\" > <LinkedInIcon /></a>\r\n                    <a href=\"https://github.com/tzookyb\" > <GitHubIcon /></a>\r\n                </div>\r\n                <div className=\"developer flex align-center\">\r\n                    <img alt=\"Hilla\" src={imgHilla} />\r\n                    <p>Hilla Meri</p>\r\n                    <a href=\"https://www.linkedin.com/in/hilla-meri-a9757a182\" > <LinkedInIcon /></a>\r\n                    <a href=\"https://github.com/HillaMeri\" > <GitHubIcon /></a>\r\n                </div>\r\n                <div className=\"developer flex align-center\">\r\n                    <img alt=\"Matan\" src={imgMatan} />\r\n                    <p>Matan Crispel</p>\r\n                    <a href=\"https://www.linkedin.com/in/matan-crispel-7316aa1a9\"> <LinkedInIcon /></a>\r\n                    <a href=\"https://github.com/matancris\" > <GitHubIcon /></a>\r\n                </div>\r\n            </div>\r\n            <small>\r\n                © Coffee Rights BeatBox 2020\r\n            </small>\r\n        </footer>\r\n    )\r\n}","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CircleLoading } from 'react-loadingg';\r\nimport ExpandMoreSharpIcon from '@material-ui/icons/ExpandMoreSharp';\r\n// LOCAL IMPORTS\r\nimport { BoxApp } from './BoxApp'\r\nimport { Footer } from '../cmps/Footer'\r\nimport { boxService } from '../services/boxService'\r\nimport { socketService } from '../services/socketService';\r\nimport { loadBoxes } from '../store/actions/boxAction'\r\n\r\nclass _Home extends Component {\r\n    componentDidMount() {\r\n        this.props.loadBoxes();\r\n        setTimeout(() => socketService.emit('get active boxes'), 1);\r\n        this.clientHeight = window.innerHeight;\r\n    }\r\n\r\n    render() {\r\n        const { boxes } = this.props;\r\n        if (!boxes) return <CircleLoading size=\"large\" color=\"#ac0aff\" />\r\n        const genres = boxService.getUsedGenres(boxes);\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"top\" className=\"hero-container flex justify-center align-center\" >\r\n                    <div className=\"hero-txt flex align-center justify-end column\">\r\n                        <div className=\"hero-title flex justify-end column\">\r\n                            <h1>Share the Beat</h1>\r\n                            <p>Enjoy music. Enjoy company.</p>\r\n                        </div>\r\n                        <div className=\"hero-btns-container flex column space-around\">\r\n                            <button onClick={() => window.scrollTo(0, this.clientHeight)}>Start listening</button>\r\n                            <a href=\"#box\" className=\"scroll-down-arrow\"><ExpandMoreSharpIcon ></ExpandMoreSharpIcon></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"hero-img\">\r\n                        <img src={require('../assets/img/hero3.jpg')} alt=\"\" />\r\n                        <img src={require('../assets/img/hero2.png')} alt=\"\" />\r\n                        <img src={require('../assets/img/hero1.jpg')} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <BoxActive /> */}\r\n\r\n                <div className=\"genre-list\">\r\n                    {genres.length && <BoxApp genres={genres} />}\r\n                </div>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boxes: state.boxReducer.boxes,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoxes,\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","// OUTSOURCE IMPORTS\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { debounce } from '@material-ui/core';\r\n\r\n// LOCAL IMPORTS\r\nimport { setFilter } from '../../store/actions/boxAction';\r\n\r\nexport class _BoxFilter extends Component {\r\n    state = {\r\n        searchStr: '',\r\n        isSearchOpen: false,\r\n        isAtBoxDetails: false\r\n    }\r\n    componentDidMount() {\r\n        this.checkIfAtDetails();\r\n    }\r\n\r\n    ref = React.createRef()\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        await this.checkIfAtDetails();\r\n\r\n        if (this.props.location.search !== prevProps.location.search &&\r\n            this.props.location.pathname !== '/') {\r\n            this.onSetFilter();\r\n        }\r\n    }\r\n\r\n    checkIfAtDetails = () => {\r\n        const status = this.props.location.pathname.startsWith('/box/details')\r\n        if (status !== this.state.isAtBoxDetails) this.setState({ searchStr: '', isAtBoxDetails: status })\r\n    }\r\n\r\n    onHandleChange = ({ target }) => {\r\n        this.setState({ searchStr: target.value }, this.onSetFilter);\r\n\r\n        if (this.state.isSearchOpen) {\r\n            if (!this.debouncedSearch) {\r\n                this.debouncedSearch = debounce(() => {\r\n                    if (this.state.isSearchOpen) this.toggleSearch()\r\n                }, 3000)\r\n            }\r\n            this.debouncedSearch();\r\n        }\r\n    }\r\n\r\n    onSetFilter = () => {\r\n        if (!this.state.isAtBoxDetails) {\r\n            const query = new URLSearchParams(window.location.search);\r\n            if (this.state.searchStr) query.set('name', this.state.searchStr);\r\n            this.props.history.push(`/box?${query.toString()}`);\r\n        } else this.props.setFilter(this.state.searchStr);\r\n    }\r\n    toggleSearch = () => {\r\n        this.setState(prevState => ({ isSearchOpen: !prevState.isSearchOpen }), () => {\r\n            if (this.state.isSearchOpen) this.ref.current.focus();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { searchStr, isAtBoxDetails } = this.state;\r\n        return (\r\n            <div className={`box-filter flex ${(this.props.isShown) ? '' : 'invisible'} ${this.state.isSearchOpen ? 'is-open' : ''}`}>\r\n                <input\r\n                    ref={this.ref}\r\n                    type=\"search\"\r\n                    className={isAtBoxDetails ? '' : \"name-filter\"}\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={searchStr}\r\n                    onChange={this.onHandleChange}\r\n                    placeholder={isAtBoxDetails ? 'Search in playlist' : 'Search for a Box'} />\r\n                <SearchIcon className=\"search-icon\" onClick={this.toggleSearch} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n})\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\nexport const BoxFilter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoxFilter))","import { userService } from \"../../services/userService\"\r\n\r\nexport function loadUser() {\r\n    return async dispatch => {\r\n        const user = await userService.getUser()\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        const users = await userService.getUsers()\r\n        dispatch({ type: 'SET_USERS', users });\r\n        return users;\r\n    };\r\n}\r\n\r\nexport function login(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.login(userCreds)\r\n        dispatch({ type: 'SET_USER', user });\r\n        return user;\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return async dispatch => {\r\n        await userService.logout();\r\n        const user = userService.getUser();\r\n        dispatch({ type: 'SET_USER', user });\r\n    };\r\n}\r\n\r\nexport function signup(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.signup(userCreds);\r\n        dispatch({ type: 'SET_USER', user });\r\n    };\r\n}\r\n","// OUTSOURCE IMPORTS\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// LOCAL IMPORTS\r\nimport { signup, loadUser } from '../../store/actions/userAction'\r\nimport { cloudService } from '../../services/cloudService'\r\nimport imgPlaceholder from '../../assets/img/img_placeholder.png';\r\n\r\nclass _Signup extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            fullName: '',\r\n            password: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ user: { ...this.state.user, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    async uploadImg(ev) {\r\n        const img = await cloudService.uploadImg(ev);\r\n        const imgUrl = cloudService.makeFaceThumb(img);\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user,\r\n                    imgUrl\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onSignup = (ev) => {        \r\n        ev.preventDefault();\r\n        if (this.state.username === '') return;\r\n        const { username, fullName, password, imgUrl } = this.state.user;\r\n        const userCreds = { username, fullName, password, imgUrl };\r\n        this.props.signup(userCreds);\r\n        this.props.loadUser();\r\n        this.props.handleClose();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n        return (\r\n            <form className=\"user-add-form flex\" onSubmit={this.onSignup}>\r\n                <div className=\"inputs flex column\">\r\n                    <label>User Name:</label>\r\n                    <input\r\n                        autoFocus\r\n                        required\r\n                        name=\"username\" type=\"text\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"User Name:\"\r\n                        autoComplete=\"off\" />\r\n                    <label>Full Name:</label>\r\n                    <input\r\n                        required\r\n                        name=\"fullName\"\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Full Name\"\r\n                        autoComplete=\"off\" />\r\n                    <label>Password:</label>\r\n                    <input\r\n                        required\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\" />\r\n\r\n                    <Button className=\"btn-log\" onClick={this.onSignup}>Signup</Button>\r\n                </div>\r\n                <div className=\"user-add-thumbnail\">\r\n                    <label className=\"upload-label\" style={{ cursor: 'pointer' }} >\r\n                        <input onChange={(ev) => this.uploadImg(ev)} type=\"file\" hidden />\r\n                        <div className=\"img-container\">\r\n                            <img src={user.imgUrl || imgPlaceholder} alt=\"box\" />\r\n                        </div>\r\n                        <div>\r\n                            {user.imgUrl ? '' : 'Upload Image'}\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    signup\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","// OUTSOURCE IMPORTS\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// LOCAL IMPORTS\r\nimport { login, loadUser } from '../../store/actions/userAction'\r\n\r\nclass _Login extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ user: { ...this.state.user, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        ev.preventDefault();\r\n        if (this.state.username === '') return;\r\n        const { username, password } = this.state.user\r\n        const userCreds = { username, password };\r\n        const user = await this.props.login(userCreds)\r\n        if (user) {\r\n            this.props.loadUser();\r\n            this.props.handleClose();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"user-add-form flex\" onSubmit={this.onLogin}>\r\n                <div className=\"inputs flex column\">\r\n                    <label>User Name:</label>\r\n                    <input\r\n                        autoFocus\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Your Name\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <label>password:</label>\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\" />\r\n                    <Button className=\"btn-log\" onClick={this.onLogin}>Login</Button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    loadUser\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","// OUTSOURCE IMPORTS\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// LOCAL IMPORTS\r\nimport { Signup } from './Signup'\r\nimport { Login } from './Login'\r\n\r\nexport function ModalUser(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const cmpMap = {\r\n    Signup: Signup,\r\n    Login: Login\r\n  }\r\n\r\n  const DynamicCmp = cmpMap[props.childern];\r\n  if (!DynamicCmp) return <h1>Loading..</h1>\r\n  return (\r\n    <div className=\"modal-signup\">\r\n      <div variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.childern}\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle >\r\n        {props.childern}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DynamicCmp handleClose={handleClose} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","// OUTSOURCE IMPORTS\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// LOCAL IMPORTS\r\nimport { ModalUser } from './ModalUser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport function UserMenu({ user, onLogout }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    function logout(ev) {\r\n        ev.preventDefault();\r\n        onLogout();\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleClose = (ev) => {\r\n        if (anchorRef.current && anchorRef.current.contains(ev.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    // const prevOpen = React.useRef(open);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"user-menu\">\r\n                <Avatar\r\n                    alt=\"Remy Sharp\" ref={anchorRef}\r\n                    src={user.imgUrl}\r\n                    aria-controls={open ? 'menu-list-grow' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleToggle}\r\n                    style={{ cursor: \"pointer\" }} />\r\n                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                    {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                            {...TransitionProps}\r\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                        >\r\n                            <Paper>\r\n                                <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                                        {!user.isGuest && <MenuItem onClick={handleClose}>\r\n                                            <Link to={`/user/${user._id}`} style={{ color: \"black\" }}>Profile</Link>\r\n                                        </MenuItem>}\r\n                                        <MenuItem >\r\n                                            < ModalUser childern={'Signup'}/>\r\n                                        </MenuItem>\r\n                                        <MenuItem >\r\n                                            < ModalUser childern={'Login'}/>\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={logout}>Logout</MenuItem>\r\n                                    </MenuList>\r\n                                </ClickAwayListener>\r\n                            </Paper>\r\n                        </Grow>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// LOCAL IMPORT\r\nimport { BoxFilter } from './boxes/BoxFilter';\r\nimport { logout } from '../store/actions/userAction'\r\nimport { UserMenu } from './user/UserMenu'\r\n\r\nclass _Header extends Component {\r\n\r\n    state = {\r\n        isScroll: false,\r\n        isMobileMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.onScroll)\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (window.scrollY > 0) {\r\n            this.setState({ isScroll: true })\r\n        }\r\n        else this.setState({ isScroll: false })\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ isMobileMenuOpen: !this.state.isMobileMenuOpen })\r\n    }\r\n\r\n    getPathForBoxAdd = () => {\r\n        let path;\r\n        const currPath = this.props.location.pathname\r\n        if (currPath === '/') path = '/add';\r\n        else path = currPath.endsWith('/add') ? currPath : `${currPath}/add`\r\n        return path;\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={this.toggleMenu} className={`screen ${this.state.isMobileMenuOpen ? 'screen-open' : ''}`} ></div>\r\n                <header onScroll={this.onScroll} className={`${this.state.isScroll ? 'sticky' : ''} flex space-between align-center`}>\r\n                    {(this.props.location.pathname === '/') ?\r\n                        <a href=\"#top\"><img title=\"BeatBox\" className=\"logo\" src={require('../assets/img/logo.png')} alt=\"logo\" /></a> :\r\n                        <Link to=\"/\" ><img title=\"BeatBox\" className=\"logo\" src={require('../assets/img/logo.png')} alt=\"logo\" /></Link>\r\n                    }\r\n\r\n                    <BoxFilter isShown={(this.props.location.pathname !== '/' || this.state.isScroll)} />\r\n\r\n                    <div className=\"right-nav flex align-center\">\r\n                        <ul className={`${this.state.isMobileMenuOpen ? 'menu-open' : ''} main-nav flex clean-list`}>\r\n                            <li><Link to=\"/box\" onClick={this.toggleMenu}>Boxes</Link></li>\r\n                            <li><Link to={this.getPathForBoxAdd} onClick={this.toggleMenu} >Create Box</Link ></li>\r\n                        </ul>\r\n\r\n                        <div className=\"user-avatar\"><UserMenu user={user} onLogout={this.props.logout} /></div>\r\n\r\n        \r\n                        <button\r\n                            className={`menu-btn`}\r\n                            onClick={this.toggleMenu}>\r\n                            {this.state.isMobileMenuOpen ? \r\n                            <CloseIcon /> :\r\n                            <MenuIcon /> }\r\n                            {/* 'X' : '☰'} */}\r\n                        </button>\r\n                    </div>\r\n                </header >\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logout,\r\n}\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Header))","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport { withRouter } from 'react-router-dom';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport { CircleLoading } from 'react-loadingg';\r\n\r\n// LOCAL IMPORT\r\nimport { changeSong, updateProgress, togglePlay } from '../store/actions/playerActions';\r\nimport { socketService } from '../services/socketService';\r\n\r\nclass _Player extends Component {\r\n    state = {\r\n        isSyncing: false,\r\n        isReady: false,\r\n        muted: false,\r\n        seeking: false,\r\n        volume: 0.75,\r\n        duration: undefined,\r\n        secPlayed: 0\r\n    }\r\n    ref = player => {\r\n        this.player = player;\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            socketService.on('got seek update', this.seekTo);\r\n        }, 1)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.currBox?._id !== prevProps.currBox?._id)\r\n            this.waitForSync(this.props.currSong)\r\n    }\r\n\r\n    waitForSync = (currSong) => {\r\n        if (this.props.currSong === currSong) setTimeout(this.waitForSync, 500);\r\n        else if (this.props.currSong?.secPlayed) {\r\n            this.setState({ isSyncing: true });\r\n            console.log('waiting for ready, status:', this.state.isReady)\r\n            if (this.state.isReady) {\r\n                socketService.emit('sync song time');\r\n                this.setState({ isSyncing: false });\r\n            }\r\n            else setTimeout(this.waitForSync, 1000)\r\n        }\r\n    }\r\n\r\n    togglePlay = () => {\r\n        this.props.togglePlay(this.props.currSong);\r\n    }\r\n\r\n    skipToSong = (skip) => {\r\n        const { currBox, currSong } = this.props;\r\n        const currSongIdx = currBox.songs.findIndex(song => song.id === currSong.id);\r\n        const lastSongIdx = currBox.songs.length - 1\r\n\r\n        var nextSongIdx = currSongIdx + skip;\r\n        if (nextSongIdx === -1) nextSongIdx = lastSongIdx;\r\n        else if (nextSongIdx > lastSongIdx) nextSongIdx = 0;\r\n\r\n        const nextSongId = currBox.songs[nextSongIdx].id\r\n        this.props.changeSong(nextSongId);\r\n    }\r\n\r\n    seekTo = (secPlayed) => {\r\n        this.player.seekTo(secPlayed);\r\n    }\r\n\r\n    handleSeekMouseDown = () => {\r\n        this.setState({ seeking: true });\r\n    }\r\n\r\n    handleSeekChange = ({ target }) => {\r\n        this.setState({ secPlayed: (parseInt(target.value)) });\r\n    }\r\n\r\n    handleSeekMouseUp = () => {\r\n        this.setState({ seeking: false });\r\n        socketService.emit('update player seek', this.state.secPlayed);\r\n    }\r\n\r\n    handleProgress = state => {\r\n        if (!this.state.seeking && !this.state.isSyncing) {\r\n            this.setState({ secPlayed: state.playedSeconds })\r\n            this.props.updateProgress(state.playedSeconds);\r\n        }\r\n    }\r\n\r\n    handleEnded = () => {\r\n        this.skipToSong(1);\r\n    }\r\n\r\n    handleDuration = (duration) => {\r\n        this.setState({ duration })\r\n    }\r\n\r\n    onReady = () => {\r\n        this.setState({ isReady: true });\r\n    }\r\n\r\n    handleVolumeChange = ({ target }) => {\r\n        this.setState({ volume: target.value })\r\n    }\r\n\r\n    toggleMute = () => {\r\n        this.setState({ muted: !this.state.muted })\r\n    }\r\n\r\n    render() {\r\n        const { secPlayed, isSyncing } = this.state;\r\n        const { currBox, currSong } = this.props;\r\n        if (!currBox || !currSong) return null;\r\n\r\n        const { isReady, volume, muted, duration } = this.state;\r\n        const { isPlaying } = currSong;\r\n\r\n        const song = currBox.songs.find(song => song.id === currSong.id);\r\n        if (!song) return null;\r\n\r\n        function showTime(seconds) {\r\n            var mins;\r\n            var secs;\r\n            if (seconds >= 60) {\r\n                mins = (parseInt(seconds / 60)).toString();\r\n                secs = (parseInt(seconds - mins * 60)).toString().padStart(2, '0');\r\n            } else {\r\n                mins = '0';\r\n                secs = (parseInt(seconds)).toString().padStart(2, '0');\r\n            }\r\n            return `${mins}:${secs}`\r\n        }\r\n\r\n        return <React.Fragment>\r\n            <ReactPlayer\r\n                ref={this.ref}\r\n                className=\"player hidden\"\r\n                url={`https://www.youtube.com/watch?v=${song?.youtubeId}`}\r\n                playing={currSong.isPlaying}\r\n                controls={false}\r\n                volume={volume}\r\n                muted={muted}\r\n                onReady={this.onReady}\r\n                onEnded={this.handleEnded}\r\n                onProgress={this.handleProgress}\r\n                onDuration={this.handleDuration}\r\n            />\r\n            <div className=\"player-container flex justify-center align-center\">\r\n                <div className={`player-capsule flex align-center justify-center ${isPlaying ? 'is-playing' : 'paused'}`}>\r\n\r\n\r\n                    <img className=\"player-thumbnail\" src={song.imgUrl} title={song.title} alt=\"song thumbnail\" />\r\n\r\n                    {!isReady ? <CircleLoading color=\"#ac0aff\" /> :\r\n                        <React.Fragment>\r\n                            <span className=\"player-title\">{song.title}</span>\r\n\r\n                            <div className=\"song-time flex align-center space-between\">\r\n                                <span className=\"player-time\">{isSyncing ? 'Syncing play...' : showTime(secPlayed)}</span>\r\n\r\n                                <input\r\n                                    className=\"duration-slider\"\r\n                                    style={{\r\n\r\n                                    }}\r\n                                    type=\"range\"\r\n                                    name=\"played\"\r\n                                    min={0}\r\n                                    max={duration}\r\n                                    onMouseDown={this.handleSeekMouseDown}\r\n                                    onMouseUp={this.handleSeekMouseUp}\r\n                                    onChange={this.handleSeekChange}\r\n                                    onTouchEnd={this.handleSeekMouseUp}\r\n                                    value={secPlayed}\r\n                                />\r\n\r\n                                {duration && <span className=\"player-time\">{showTime(duration + 1)}</span>}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    <div className=\"player-controls flex align-center\">\r\n                        <button className=\"player-ctrl-btn flex align-center\" title=\"Previous\" onClick={() => this.skipToSong(-1)}><SkipPreviousIcon /></button>\r\n                        <button className=\"player-ctrl-btn flex align-center\" title={isPlaying ? 'Pause' : 'Play'} onClick={this.togglePlay}>{isPlaying ? <PauseIcon /> : <PlayArrowIcon />}</button>\r\n                        <button className=\"player-ctrl-btn flex align-center\" title=\"Next\" onClick={() => this.skipToSong(1)}><SkipNextIcon /></button>\r\n\r\n                        <input\r\n                            className={`volume-slider ${muted ? 'muted' : ''}`}\r\n                            type=\"range\"\r\n                            value={volume}\r\n                            min={0}\r\n                            step={0.05}\r\n                            max={1}\r\n                            onChange={this.handleVolumeChange}\r\n                        />\r\n                        <button className=\"player-ctrl-btn flex justify-center align-center\" title={muted ? 'Unmute' : 'Mute'} onClick={this.toggleMute}>{muted ? <VolumeMuteIcon /> : <VolumeUpIcon />}</button>\r\n                        <img\r\n                            style={{ visibility: (this.props.location.pathname === `/box/details/${currBox._id}`) ? 'hidden' : 'visible' }}\r\n                            className=\"back-to-box\"\r\n                            src={require('../assets/img/box.png')}\r\n                            title=\"Back to box\"\r\n                            alt=\"Back to box\"\r\n                            onClick={() => this.props.history.push(`/box/details/${currBox._id}`)} />\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        </React.Fragment >\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currBox: state.boxReducer.currBox,\r\n        currSong: state.boxReducer.currSong,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changeSong,\r\n    togglePlay,\r\n    updateProgress,\r\n}\r\n\r\nexport const Player = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Player));","// OUTSOURCE IMPORT\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// LOCAL IMPORT\r\nimport { UserDetails } from './pages/UserDetails';\r\nimport { BoxDetails } from './pages/BoxDetails';\r\nimport { BoxApp } from './pages/BoxApp';\r\nimport { BoxAdd } from './pages/BoxAdd';\r\nimport { Home } from './pages/Home';\r\nimport { Header } from './cmps/Header';\r\nimport { Player } from './cmps/Player';\r\nimport { socketService } from './services/socketService';\r\nimport { loadConnectedUsers } from './store/actions/connectedUsersAction';\r\nimport { gotBoxUpdate, loadBoxes, setActiveBoxes, setBoxStatus } from './store/actions/boxAction';\r\nimport { addMsg } from './store/actions/msgAction';\r\nimport { updateLocalPlayer } from './store/actions/playerActions';\r\n\r\nclass _App extends Component {\r\n  componentDidMount() {\r\n    this.props.loadBoxes();\r\n    // SOCKETS\r\n    socketService.setup();\r\n    socketService.on('got box status', this.props.setBoxStatus);\r\n    socketService.on('joined new box', this.props.loadConnectedUsers)\r\n    socketService.on('box changed', this.props.gotBoxUpdate);\r\n    socketService.on('chat addMsg', this.props.addMsg);\r\n    socketService.on('got player update', this.props.updateLocalPlayer);\r\n    socketService.on('got active boxes', this.props.setActiveBoxes);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <main >\r\n          <Route component={BoxAdd} path=\"**/add\" />\r\n          <Switch>\r\n            <Route component={BoxDetails} path=\"/box/details/:boxId\" />\r\n            <Route component={UserDetails} path=\"/user/:id\" />\r\n            <Route component={BoxApp} path=\"/box\" />\r\n            <Route component={Home} path=\"/\" />\r\n          </Switch>\r\n        </main>\r\n        \r\n        <Player />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  setBoxStatus,\r\n  gotBoxUpdate,\r\n  loadConnectedUsers,\r\n  addMsg,\r\n  updateLocalPlayer,\r\n  loadBoxes,\r\n  setActiveBoxes\r\n}\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { App } from './App.jsx';\r\nimport './assets/scss/global.scss';\r\n\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();","module.exports = __webpack_public_path__ + \"static/media/img_placeholder.ce927d4c.png\";"],"sourceRoot":""}